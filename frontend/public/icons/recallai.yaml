---
openapi: 3.0.3
info:
  title: Recall.ai API
  version: 0.0.0
  description: Recall.ai API Documentation
paths:
  "/api/_barty/credentials/":
    get:
      operationId: api__barty_credentials_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BartyCredential"
          description: ''
    post:
      operationId: api__barty_credentials_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BartyCredential"
          description: ''
  "/api/_barty/credentials/{id}/":
    get:
      operationId: api__barty_credentials_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this barty credential.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BartyCredential"
          description: ''
    put:
      operationId: api__barty_credentials_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this barty credential.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BartyCredential"
          description: ''
    patch:
      operationId: api__barty_credentials_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this barty credential.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedBartyCredential"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedBartyCredential"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedBartyCredential"
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BartyCredential"
          description: ''
    delete:
      operationId: api__barty_credentials_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this barty credential.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  "/api/_barty/credentials/{id}/access-token/":
    post:
      operationId: api__barty_credentials_access_token_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this barty credential.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BartyCredential"
          description: ''
  "/api/_barty/credentials/{id}/free/":
    post:
      operationId: api__barty_credentials_free_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this barty credential.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BartyCredential"
          description: ''
  "/api/_barty/credentials/{id}/lock/":
    post:
      operationId: api__barty_credentials_lock_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this barty credential.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BartyCredential"
          description: ''
  "/api/_barty/credentials/{id}/meeting/":
    post:
      operationId: api__barty_credentials_meeting_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this barty credential.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BartyCredential"
          description: ''
  "/api/_barty/credentials/{id}/refresh/":
    post:
      operationId: api__barty_credentials_refresh_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this barty credential.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BartyCredential"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BartyCredential"
          description: ''
  "/api/_barty/oauth-apps/":
    get:
      operationId: api__barty_oauth_apps_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BartyOauthApp"
          description: ''
    post:
      operationId: api__barty_oauth_apps_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BartyOauthApp"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BartyOauthApp"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BartyOauthApp"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BartyOauthApp"
          description: ''
  "/api/_barty/oauth-apps/{id}/":
    get:
      operationId: api__barty_oauth_apps_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this barty oauth app.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BartyOauthApp"
          description: ''
    delete:
      operationId: api__barty_oauth_apps_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this barty oauth app.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  "/api/_barty/oauth-apps/{id}/acquire/":
    post:
      operationId: api__barty_oauth_apps_acquire_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this barty oauth app.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BartyOauthApp"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BartyOauthApp"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BartyOauthApp"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BartyOauthApp"
          description: ''
  "/api/v1/analysis/job/":
    get:
      operationId: analysis_job_list
      description: Get a list of all jobs.
      summary: List Jobs
      parameters:
      - in: query
        name: bot_id
        schema:
          type: string
          format: uuid
      - in: query
        name: created_at_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at_before
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
            enum:
            - completed
            - errored
            - in_progress
        description: |-
          * `in_progress` - In Progress
          * `completed` - Completed
          * `errored` - Errored
        explode: true
        style: form
      tags:
      - analysis
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedJobList"
          description: ''
  "/api/v1/analysis/job/{id}/":
    get:
      operationId: analysis_job_retrieve
      description: Get a job.
      summary: Retrieve Job
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this job.
        required: true
      tags:
      - analysis
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Job"
          description: ''
  "/api/v1/billing/usage/":
    get:
      operationId: billing_usage_retrieve
      description: Get bot usage statistics
      summary: Get Usage
      parameters:
      - in: query
        name: end
        schema:
          type: string
          format: date-time
      - in: query
        name: start
        schema:
          type: string
          format: date-time
      tags:
      - billing
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UsageResponse"
          description: ''
  "/api/v1/bot/":
    get:
      operationId: bot_list
      description: Get a list of all bots
      summary: List Bots
      parameters:
      - in: query
        name: join_at_after
        schema:
          type: string
          format: date-time
      - in: query
        name: join_at_before
        schema:
          type: string
          format: date-time
      - in: query
        name: meeting_url
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: platform
        schema:
          type: array
          items:
            type: string
            enum:
            - chime_sdk
            - google_meet
            - goto_meeting
            - microsoft_teams
            - microsoft_teams_live
            - slack_authenticator
            - slack_huddle_observer
            - webex
            - zoom
        description: |-
          * `zoom` - Zoom
          * `google_meet` - Meet
          * `goto_meeting` - Goto
          * `microsoft_teams` - Teams
          * `microsoft_teams_live` - Teams Live
          * `webex` - Webex
          * `chime_sdk` - Chime Sdk
          * `slack_authenticator` - Slack Authenticator
          * `slack_huddle_observer` - Slack Huddle Observer
        explode: true
        style: form
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
            enum:
            - analysis_done
            - analysis_failed
            - call_ended
            - done
            - fatal
            - in_call_not_recording
            - in_call_recording
            - in_waiting_room
            - joining_call
            - media_expired
            - ready
            - recording_done
            - recording_permission_allowed
            - recording_permission_denied
        description: |-
          * `ready` - Ready
          * `joining_call` - Joining Call
          * `in_waiting_room` - In Waiting Room
          * `in_call_not_recording` - In Call Not Recording
          * `recording_permission_allowed` - Recording Permission Allowed
          * `recording_permission_denied` - Recording Permission Denied
          * `in_call_recording` - In Call Recording
          * `recording_done` - Recording Done
          * `call_ended` - Call Ended
          * `done` - Done
          * `fatal` - Fatal
          * `media_expired` - Media Expired
          * `analysis_done` - Analysis Done
          * `analysis_failed` - Analysis Failed
        explode: true
        style: form
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedBotList"
          description: ''
    post:
      operationId: bot_create
      description: Create a new bot.
      summary: Create Bot
      tags:
      - bot
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Bot"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Bot"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Bot"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
        '507':
          content:
            application/json:
              schema:
                description: If no bots are available in the ad-hoc bot pool the HTTP
                  507 code is returned. The ad-hoc bot pool is replenished every few
                  minutes so retrying the request will eventually succeed.
          description: ''
  "/api/v1/bot/{bot_id}/chat-messages/":
    get:
      operationId: bot_chat_messages_list
      description: Get list of chat messages read by the bot in the meeting(excluding
        messages sent by the bot itself).
      summary: List Chat Messages
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: bot_id
        schema:
          type: string
          format: uuid
        description: The ID of the bot for which to retrieve the chat messages
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedMeetingChatMessageList"
          description: ''
  "/api/v1/bot/{bot_id}/screenshots/":
    get:
      operationId: bot_screenshots_list
      description: Get a list of all screenshots of the bot
      summary: List Bot Screenshots
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: bot_id
        schema:
          type: string
          format: uuid
        description: The ID of the bot for which to retrieve the screenshots
        required: true
      - in: query
        name: recorded_at_after
        schema:
          type: string
          format: date-time
      - in: query
        name: recorded_at_before
        schema:
          type: string
          format: date-time
      tags:
      - bot-screenshots
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedBotScreenshotList"
          description: ''
  "/api/v1/bot/{bot_id}/screenshots/{id}/":
    get:
      operationId: bot_screenshots_retrieve
      description: Get a bot screenshot instance.
      summary: Retrieve Bot Screenshot
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot screenshot.
        required: true
      - in: path
        name: bot_id
        schema:
          type: string
          format: uuid
        description: The ID of the bot for which to retrieve the screenshot
        required: true
      tags:
      - bot-screenshots
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BotScreenshot"
          description: ''
  "/api/v1/bot/{id}/":
    get:
      operationId: bot_retrieve
      description: Get a bot instance.
      summary: Retrieve Bot
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
    patch:
      operationId: bot_partial_update
      description: Update a Scheduled Bot.
      summary: Update Scheduled Bot
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedBot"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedBot"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedBot"
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
    delete:
      operationId: bot_destroy
      description: Deletes a bot. This can only be done on scheduled bots that have
        not yet joined a call.
      summary: Delete Scheduled Bot
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  "/api/v1/bot/{id}/delete_media/":
    post:
      operationId: bot_delete_media_create
      description: Deletes bot media stored by Recall. This is irreversable.
      summary: Delete Bot Media
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
  "/api/v1/bot/{id}/intelligence/":
    get:
      operationId: bot_intelligence_retrieve
      description: Get the results of additional analysis specified by the intelligence
        parameter. If the call is not yet complete, this returns results from any
        real-time analysis performed so-far.
      summary: Get Bot Intelligence
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  "/api/v1/bot/{id}/leave_call/":
    post:
      operationId: bot_leave_call_create
      description: Removes the bot from the meeting. This is irreversable.
      summary: Remove Bot From Call
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
  "/api/v1/bot/{id}/logs/":
    get:
      operationId: bot_logs_retrieve
      description: Get the logs produced by the bot.
      summary: Get Bot Logs
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Log"
          description: ''
  "/api/v1/bot/{id}/output_audio/":
    post:
      operationId: bot_output_audio_create
      description: "Causes the bot to output audio. \nNote: The bot must be configured
        with 'automatic_audio_output' enabled in order to use this endpoint."
      summary: Output Audio
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AudioOutputData"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/AudioOutputData"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/AudioOutputData"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
    delete:
      operationId: bot_output_audio_destroy
      description: Causes the bot to stop outputting audio.
      summary: Stop Output Audio
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  "/api/v1/bot/{id}/output_media/":
    post:
      operationId: bot_output_media_create
      description: Causes the bot to start outputting media.
      summary: Output Media
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OutputMedia"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/OutputMedia"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/OutputMedia"
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
    delete:
      operationId: bot_output_media_destroy
      description: Causes the bot to stop outputting media.
      summary: Stop Output Media
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                camera:
                  type: boolean
                  description: Stop outputting media on the bot camera
                  default: false
                screenshare:
                  type: boolean
                  description: Stop outputting media on the bot screenshare
                  default: false
              additionalProperties: false
        required: true
  "/api/v1/bot/{id}/output_screenshare/":
    post:
      operationId: bot_output_screenshare_create
      description: Causes the bot to start screensharing.
      summary: Start Screenshare
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/VideoOutput"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/VideoOutput"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/VideoOutput"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
    delete:
      operationId: bot_output_screenshare_destroy
      description: Causes the bot to stop screensharing.
      summary: Stop Screensharing
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  "/api/v1/bot/{id}/output_video/":
    post:
      operationId: bot_output_video_create
      description: Causes the bot to start outputting video.
      summary: Output Video
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/VideoOutput"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/VideoOutput"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/VideoOutput"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
    delete:
      operationId: bot_output_video_destroy
      description: Causes the bot to stop outputting video.
      summary: Stop Output Video
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  "/api/v1/bot/{id}/pause_recording/":
    post:
      operationId: bot_pause_recording_create
      description: Instructs the bot to pause the current recording.
      summary: Pause Recording
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
  "/api/v1/bot/{id}/request_recording_permission/":
    post:
      operationId: bot_request_recording_permission_create
      description: 'Zoom Only: Request recording permission from the host.'
      summary: Request Recording Permission
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
  "/api/v1/bot/{id}/resume_recording/":
    post:
      operationId: bot_resume_recording_create
      description: Instructs the bot to resume a paused recording.
      summary: Resume Recording
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
  "/api/v1/bot/{id}/send_chat_message/":
    post:
      operationId: bot_send_chat_message_create
      description: 'Causes the bot to send a message in the meeting chat. '
      summary: Send Chat Message
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SendChatMessageInput"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/SendChatMessageInput"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/SendChatMessageInput"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
  "/api/v1/bot/{id}/speaker_timeline/":
    get:
      operationId: bot_speaker_timeline_list
      description: Get the speaker timeline produced by the bot. If the call is not
        yet complete, this returns the speaker timeline so-far.
      summary: Get Speaker Timeline
      parameters:
      - in: query
        name: exclude_null_speaker
        schema:
          type: boolean
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SpeakerTimelineEvent"
          description: ''
  "/api/v1/bot/{id}/start_recording/":
    post:
      operationId: bot_start_recording_create
      description: Instructs the bot to start recording the meeting. This will restart
        the current recording if one is already in progress.
      summary: Start Recording
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RecordingConfig"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/RecordingConfig"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/RecordingConfig"
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
  "/api/v1/bot/{id}/stop_recording/":
    post:
      operationId: bot_stop_recording_create
      description: Instructs the bot to end the current recording.
      summary: Stop Recording
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
  "/api/v1/bot/{id}/transcribe/":
    post:
      operationId: bot_transcribe_create
      description: Asynchronously transcribes bot audio
      summary: Asynchronously Transcribe Bot Audio
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AssemblyaiAsyncTranscription"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/AssemblyaiAsyncTranscription"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/AssemblyaiAsyncTranscription"
      security:
      - tokenAuth: []
      - cookieAuth: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Bot"
          description: ''
  "/api/v1/bot/{id}/transcript/":
    get:
      operationId: bot_transcript_list
      description: |-
        Get the transcript produced by the bot.
         If the call is not yet complete, this returns the transcript so-far.
      summary: Get Bot Transcript
      parameters:
      - in: query
        name: enhanced_diarization
        schema:
          type: boolean
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bot.
        required: true
      tags:
      - bot
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TranscriptLegacyParagraph"
          description: ''
  "/api/v1/calendar/authenticate/":
    post:
      operationId: calendar_authenticate_create
      description: Generate an authentication token for calendar APIs, scoped to the
        user. Each token has an expiry of 1 day from time of creation.
      summary: Get Calendar Auth Token
      tags:
      - calendar-v1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CalendarAuthenticateRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CalendarAuthenticateRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CalendarAuthenticateRequest"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarAuthenticateResponse"
          description: ''
  "/api/v1/calendar/meetings/":
    get:
      operationId: calendar_meetings_list
      summary: List Calendar Meetings
      parameters:
      - in: query
        name: ical_uid
        schema:
          type: string
        description: Filter results by ical_uid. (Case sensitive prefix match will
          be performed.)
      - in: query
        name: start_time_after
        schema:
          type: string
          format: date-time
      - in: query
        name: start_time_before
        schema:
          type: string
          format: date-time
      tags:
      - calendar-v1
      security:
      - CalendarJwtAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CalendarMeeting"
          description: ''
  "/api/v1/calendar/meetings/{id}/":
    get:
      operationId: calendar_meetings_retrieve
      summary: Retrieve Calendar Meeting
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calendar meeting.
        required: true
      tags:
      - calendar-v1
      security:
      - CalendarJwtAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarMeeting"
          description: ''
    put:
      operationId: calendar_meetings_update
      description: Use this endpoint to update override_should_record property of
        the meeting. This endpoint is rate limited to 10 requests per user per meeting
        per minute.
      summary: Update Calendar Meeting
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calendar meeting.
        required: true
      tags:
      - calendar-v1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CalendarMeeting"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CalendarMeeting"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CalendarMeeting"
      security:
      - CalendarJwtAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarMeeting"
          description: ''
  "/api/v1/calendar/meetings/refresh/":
    post:
      operationId: calendar_meetings_refresh_create
      description: Resync the calendar meetings for the user. This endpoint is rate
        limited to 1 request per user per 10 minutes.
      summary: Refresh Calendar Meetings
      tags:
      - calendar-v1
      security:
      - CalendarJwtAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CalendarMeeting"
          description: ''
  "/api/v1/calendar/user/":
    get:
      operationId: calendar_user_retrieve
      summary: Get Calendar User
      tags:
      - calendar-v1
      security:
      - CalendarJwtAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarUser"
          description: ''
    put:
      operationId: calendar_user_update
      description: Update the recording preferences for a calendar user. This endpoint
        is rate limited to 10 requests per user per minute.
      summary: Update Recording Preferences
      tags:
      - calendar-v1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CalendarUser"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CalendarUser"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CalendarUser"
      security:
      - CalendarJwtAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarUser"
          description: ''
    delete:
      operationId: calendar_user_destroy
      description: Delete calendar user(+disconnect any connected calendars). This
        endpoint is rate limited to 10 requests per user per minute.
      summary: Delete Calendar User
      tags:
      - calendar-v1
      security:
      - CalendarJwtAuthentication: []
      responses:
        '204':
          description: No response body
  "/api/v1/calendar/user/disconnect/":
    post:
      operationId: calendar_user_disconnect_create
      description: Disconnect calendar of specific platform. This endpoint is rate
        limited to 2 requests per user per minute.
      summary: Disconnect Calendar Platform
      tags:
      - calendar-v1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CalendarUserDisconnectPlatform"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CalendarUserDisconnectPlatform"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CalendarUserDisconnectPlatform"
        required: true
      security:
      - CalendarJwtAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarUser"
          description: ''
  "/api/v1/calendar/users/":
    get:
      operationId: calendar_users_list
      description: List all calendar users created for the account.
      summary: List Calendar Users
      parameters:
      - in: query
        name: email
        schema:
          type: string
        description: Filter results by email address
      - in: query
        name: paginate
        schema:
          type: boolean
          default: false
        description: Enable pagination for the results
      tags:
      - calendar-v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CalendarUser"
          description: ''
  "/api/v1/download/audio_separate/":
    get:
      operationId: download_audio_separate_retrieve
      tags:
      - download
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AudioSeparatePart"
          description: ''
  "/api/v1/download/participants/":
    get:
      operationId: download_participants_retrieve
      tags:
      - download
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Participant"
          description: ''
  "/api/v1/download/speaker_timeline/":
    get:
      operationId: download_speaker_timeline_retrieve
      tags:
      - download
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RecordingSpeakerEntry"
          description: ''
  "/api/v1/download/video_separate/":
    get:
      operationId: download_video_separate_retrieve
      tags:
      - download
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/VideoSeparatePart"
          description: ''
  "/api/v2/calendar-accounts/{uuid}/":
    get:
      operationId: calendar_accounts_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - calendar-accounts
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarAccount"
          description: ''
  "/api/v2/calendar-accounts/{uuid}/access_token/":
    get:
      operationId: calendar_accounts_access_token_retrieve
      description: Get the OAuth access token for this calendar account.
      summary: Get Access Token
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - calendar-accounts
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessToken"
          description: ''
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarAccountAccessTokenError"
          description: ''
  "/api/v2/calendar-events/":
    get:
      operationId: calendar_events_list
      description: Get a list of calendar events
      summary: List Calendar Events
      parameters:
      - in: query
        name: calendar_id
        schema:
          type: string
          format: uuid
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: ical_uid
        schema:
          type: string
        description: Filter results by ical_uid. (Case sensitive prefix match will
          be performed.)
      - in: query
        name: is_deleted
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: start_time
        schema:
          type: string
          format: date-time
      - in: query
        name: start_time__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: start_time__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_at__gte
        schema:
          type: string
          format: date-time
      tags:
      - calendar-v2
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedCalendarEventList"
          description: ''
  "/api/v2/calendar-events/{id}/":
    get:
      operationId: calendar_events_retrieve
      description: Get a calendar event instance.
      summary: Retrieve Calendar Event
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calendar event.
        required: true
      tags:
      - calendar-v2
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarEvent"
          description: ''
  "/api/v2/calendar-events/{id}/bot/":
    post:
      operationId: calendar_events_bot_create
      description: Schedule a bot for a calendar event. This endpoint will return
        the updated calendar event in response.
      summary: Schedule Bot For Calendar Event
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calendar event.
        required: true
      tags:
      - calendar-v2
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CalendarEventAddBot"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CalendarEventAddBot"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CalendarEventAddBot"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarEvent"
          description: ''
    delete:
      operationId: calendar_events_bot_destroy
      description: Delete bot(s) scheduled for the calendar event. This endpoint will
        return the updated calendar event in response.
      summary: Delete Bot From Calendar Event
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calendar event.
        required: true
      tags:
      - calendar-v2
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarEvent"
          description: ''
  "/api/v2/calendars/":
    get:
      operationId: calendars_list
      description: Get a list of calendars
      summary: List Calendars
      parameters:
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: email
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: platform
        schema:
          type: string
          enum:
          - google_calendar
          - microsoft_outlook
        description: |-
          * `google_calendar` - Google Calendar
          * `microsoft_outlook` - Microsoft Outlook
      - in: query
        name: status
        schema:
          type: string
          enum:
          - connected
          - connecting
          - disconnected
        description: |-
          * `connecting` - Connecting
          * `connected` - Connected
          * `disconnected` - Disconnected
      tags:
      - calendar-v2
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedCalendarList"
          description: ''
    post:
      operationId: calendars_create
      description: Create a new calendar.
      summary: Create Calendar
      tags:
      - calendar-v2
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Calendar"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Calendar"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Calendar"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Calendar"
          description: ''
  "/api/v2/calendars/{id}/":
    get:
      operationId: calendars_retrieve
      description: Get a calendar instance.
      summary: Retrieve Calendar
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calendar.
        required: true
      tags:
      - calendar-v2
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Calendar"
          description: ''
    patch:
      operationId: calendars_partial_update
      description: Update an existing calendar.
      summary: Update Calendar
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calendar.
        required: true
      tags:
      - calendar-v2
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedCalendar"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedCalendar"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedCalendar"
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Calendar"
          description: ''
    delete:
      operationId: calendars_destroy
      description: Deletes a calendar. This will disconnect the calendar.
      summary: Delete Calendar
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this calendar.
        required: true
      tags:
      - calendar-v2
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  "/api/v2/google-login-groups/":
    get:
      operationId: google_login_groups_list
      description: Get list of all Google Login Groups.
      summary: List Google Login Groups
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - google-login-group
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedGoogleLoginGroupList"
          description: ''
    post:
      operationId: google_login_groups_create
      description: Create a new Google Login Group.
      summary: Create Google Login Group
      tags:
      - google-login-group
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GoogleLoginGroup"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/GoogleLoginGroup"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/GoogleLoginGroup"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GoogleLoginGroup"
          description: ''
  "/api/v2/google-login-groups/{id}/":
    get:
      operationId: google_login_groups_retrieve
      description: Get an existing Google Login Group.
      summary: Retrieve Google Login Group
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this google login group.
        required: true
      tags:
      - google-login-group
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GoogleLoginGroup"
          description: ''
    put:
      operationId: google_login_groups_update
      description: Update an existing Google Login Group.
      summary: Update Google Login Group
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this google login group.
        required: true
      tags:
      - google-login-group
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GoogleLoginGroup"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/GoogleLoginGroup"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/GoogleLoginGroup"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GoogleLoginGroup"
          description: ''
    patch:
      operationId: google_login_groups_partial_update
      description: Partial Update an existing Google Login Group.
      summary: Partial Update Google Login Group
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this google login group.
        required: true
      tags:
      - google-login-group
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedGoogleLoginGroup"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedGoogleLoginGroup"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedGoogleLoginGroup"
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GoogleLoginGroup"
          description: ''
    delete:
      operationId: google_login_groups_destroy
      description: Deletes an existing Google Login Group.
      summary: Destroy Google Login Group
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this google login group.
        required: true
      tags:
      - google-login-group
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  "/api/v2/google-logins/":
    get:
      operationId: google_logins_list
      description: Get list of all Google Logins.
      summary: List Google Logins
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: group_id
        schema:
          type: string
          format: uuid
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: sso_v2_workspace_domain
        schema:
          type: string
      tags:
      - google-login
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedGoogleLoginList"
          description: ''
    post:
      operationId: google_logins_create
      description: Create a new Google Login.
      summary: Create Google Login
      tags:
      - google-login
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GoogleLogin"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/GoogleLogin"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/GoogleLogin"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GoogleLogin"
          description: ''
  "/api/v2/google-logins/{id}/":
    get:
      operationId: google_logins_retrieve
      description: Get an existing Google Login.
      summary: Retrieve Google Login
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this google login.
        required: true
      tags:
      - google-login
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GoogleLogin"
          description: ''
    put:
      operationId: google_logins_update
      description: Update an existing Google Login.
      summary: Update Google Login
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this google login.
        required: true
      tags:
      - google-login
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GoogleLogin"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/GoogleLogin"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/GoogleLogin"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GoogleLogin"
          description: ''
    patch:
      operationId: google_logins_partial_update
      description: Partial Update an existing Google Login.
      summary: Partial Update Google Login
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this google login.
        required: true
      tags:
      - google-login
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedGoogleLogin"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedGoogleLogin"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedGoogleLogin"
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GoogleLogin"
          description: ''
    delete:
      operationId: google_logins_destroy
      description: Deletes an existing Google Login.
      summary: Destroy Google Login
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this google login.
        required: true
      tags:
      - google-login
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  "/api/v2/recordings/{id}/":
    get:
      operationId: recordings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - recordings
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LegacyRecording"
          description: ''
  "/api/v2/slack-teams/":
    get:
      operationId: slack_teams_list
      tags:
      - slack-teams
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SlackTeamIntegration"
          description: ''
    post:
      operationId: slack_teams_create
      tags:
      - slack-teams
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SlackTeamIntegration"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/SlackTeamIntegration"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/SlackTeamIntegration"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SlackTeamIntegration"
          description: ''
  "/api/v2/slack-teams/{id}/":
    get:
      operationId: slack_teams_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - slack-teams
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SlackTeamIntegration"
          description: ''
    put:
      operationId: slack_teams_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - slack-teams
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SlackTeamIntegration"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/SlackTeamIntegration"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/SlackTeamIntegration"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SlackTeamIntegration"
          description: ''
    patch:
      operationId: slack_teams_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - slack-teams
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedSlackTeamIntegration"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedSlackTeamIntegration"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedSlackTeamIntegration"
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SlackTeamIntegration"
          description: ''
    delete:
      operationId: slack_teams_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - slack-teams
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  "/api/v2/zoom-meetings-to-credentials/":
    get:
      operationId: zoom_meetings_to_credentials_list
      description: Get a list of all mappings from Zoom Meeting ID to Zoom OAuth Credential.
        Recall uses mappings internally to determine which credential to use when
        automatically fetching join tokens for a meeting. Inspecting these mappings
        may be helpful when debugging bots that don't automatically record due to
        being unable to fetch join tokens.
      summary: List Zoom Meeting to OAuth Credential Mappings
      parameters:
      - in: query
        name: credential
        schema:
          type: string
          format: uuid
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: meeting_id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: synced_at_after
        schema:
          type: string
          format: date-time
      - in: query
        name: synced_at_before
        schema:
          type: string
          format: date-time
      tags:
      - zoom-meetings-to-credentials
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedZoomMeetingToCredentialList"
          description: ''
  "/api/v2/zoom-oauth-app-logs/":
    get:
      operationId: zoom_oauth_app_logs_list
      description: Get a list of all Zoom OAuth App Logs. Any warnings or errors related
        to the OAuth App will be logged here, and this can be helpful for debugging.
      summary: List Zoom OAuth App Logs
      parameters:
      - in: query
        name: created_at_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at_before
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: oauth_app
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - zoom-oauth-apps
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedZoomOAuthAppLogList"
          description: ''
  "/api/v2/zoom-oauth-apps/":
    get:
      operationId: zoom_oauth_apps_list
      description: Get a list of all Zoom OAuth Apps.
      summary: List Zoom OAuth Apps
      parameters:
      - in: query
        name: client_id
        schema:
          type: string
      - in: query
        name: created_at_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at_before
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: kind
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: webhook_last_validation_after
        schema:
          type: string
          format: date-time
      - in: query
        name: webhook_last_validation_before
        schema:
          type: string
          format: date-time
      tags:
      - zoom-oauth-apps
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedZoomOAuthAppList"
          description: ''
    post:
      operationId: zoom_oauth_apps_create
      description: Create a new Zoom OAuth App.
      summary: Create Zoom OAuth App
      tags:
      - zoom-oauth-apps
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ZoomOAuthApp"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/ZoomOAuthApp"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/ZoomOAuthApp"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ZoomOAuthApp"
          description: ''
  "/api/v2/zoom-oauth-apps/{id}/":
    get:
      operationId: zoom_oauth_apps_retrieve
      description: Get a Zoom OAuth App.
      summary: Retrieve Zoom OAuth App
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this zoom o auth app.
        required: true
      tags:
      - zoom-oauth-apps
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ZoomOAuthApp"
          description: ''
    delete:
      operationId: zoom_oauth_apps_destroy
      description: Deletes a Zoom OAuth App.
      summary: Destroy Zoom OAuth App
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this zoom o auth app.
        required: true
      tags:
      - zoom-oauth-apps
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  "/api/v2/zoom-oauth-credential-logs/":
    get:
      operationId: zoom_oauth_credential_logs_list
      description: Get a list of all Zoom OAuth Credential Logs. Any warnings or errors
        related to the OAuth Credential will be logged here, and this can be helpful
        for debugging.
      summary: List Zoom OAuth Credential Logs
      parameters:
      - in: query
        name: created_at_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at_before
        schema:
          type: string
          format: date-time
      - in: query
        name: credential
        schema:
          type: string
          format: uuid
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - zoom-oauth-credentials
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedZoomOAuthCredentialLogList"
          description: ''
  "/api/v2/zoom-oauth-credentials/":
    get:
      operationId: zoom_oauth_credentials_list
      description: Get a list of all Zoom OAuth Credentials
      summary: List Zoom OAuth Credentials
      parameters:
      - in: query
        name: account_id
        schema:
          type: string
      - in: query
        name: created_at_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at_before
        schema:
          type: string
          format: date-time
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: query
        name: meeting_sync_status
        schema:
          type: string
          enum:
          - completed
          - failed
          - in_progress
          - not_started
        description: |-
          This field tracks the status of initial meeting sync on the credential. This operation is processed asynchronously when the credential is created or when the sync meetings endpoint is called.

          * `not_started` - Not Started
          * `in_progress` - In Progress
          * `completed` - Completed
          * `failed` - Failed
      - in: query
        name: oauth_app
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - healthy
          - unhealthy
        description: |-
          * `healthy` - Healthy
          * `unhealthy` - Unhealthy
      - in: query
        name: user_id
        schema:
          type: string
      tags:
      - zoom-oauth-credentials
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginatedZoomOAuthCredentialList"
          description: ''
    post:
      operationId: zoom_oauth_credentials_create
      description: Create a new Zoom OAuth Credential.
      summary: Create Zoom OAuth Credential
      tags:
      - zoom-oauth-credentials
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ZoomOAuthCredential"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/ZoomOAuthCredential"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/ZoomOAuthCredential"
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ZoomOAuthCredential"
          description: ''
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ZoomOAuthCredentialBadRequest"
          description: ''
  "/api/v2/zoom-oauth-credentials/{id}/":
    get:
      operationId: zoom_oauth_credentials_retrieve
      description: Get a Zoom OAuth Credential.
      summary: Retrieve Zoom OAuth Credential
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this zoom o auth credential.
        required: true
      tags:
      - zoom-oauth-credentials
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ZoomOAuthCredential"
          description: ''
    delete:
      operationId: zoom_oauth_credentials_destroy
      description: Deletes a Zoom OAuth Credential.
      summary: Destroy Zoom OAuth Credential
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this zoom o auth credential.
        required: true
      tags:
      - zoom-oauth-credentials
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  "/api/v2/zoom-oauth-credentials/{id}/access-token/":
    get:
      operationId: zoom_oauth_credentials_access_token_retrieve
      description: Get the access token for these credentials.
      summary: Get Access Token
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this zoom o auth credential.
        required: true
      tags:
      - zoom-oauth-credentials
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ZoomAccessToken"
          description: ''
  "/api/v2/zoom-oauth-credentials/{id}/sync-meetings/":
    post:
      operationId: zoom_oauth_credentials_sync_meetings_create
      description: Manually re-sync meetings accessible from these credentials. This
        operation is asynchronous, and may take some time to complete.Use the `meeting_sync_status`
        field on the credential object to check status of sync.This is ONLY useful
        for debugging, and should not be called on a regular basis. Meetings are ordinarily
        automatically synced.
      summary: Manually Resync Meetings
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this zoom o auth credential.
        required: true
      tags:
      - zoom-oauth-credentials
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  "/api/v2/zoom-oauth-credentials/{id}/validate/":
    post:
      operationId: zoom_oauth_credentials_validate_create
      description: 'Manually check the validity of credentials, and re-enable them
        if they are functional. This can be useful if credentials are disabled due
        to repeated errors. '
      summary: Manually Revalidate Credential
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this zoom o auth credential.
        required: true
      tags:
      - zoom-oauth-credentials
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  "/api/v2beta/bot/{id}/analyze":
    post:
      operationId: bot_analyze_create
      description: Run analysis on bot media.
      summary: Analyze Bot Media
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - bot
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BotAnalysis"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BotAnalysis"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BotAnalysis"
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BotAnalysis"
          description: ''
components:
  schemas:
    AccessToken:
      type: object
      properties:
        access_token:
          type: string
          readOnly: true
      required:
      - access_token
    AdditionalVocab:
      type: object
      properties:
        content:
          type: string
        sounds_like:
          type: array
          items:
            type: string
      required:
      - content
    AssemblyAiAsyncChunkedCustomSpelling:
      type: object
      properties:
        to:
          type: string
        from:
          type: array
          items:
            type: string
      required:
      - from
      - to
    AssemblyAiAsyncChunkedStreaming:
      type: object
      properties:
        boost_param:
          type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.boost_param'
        content_safety:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.content_safety'
        content_safety_confidence:
          type: integer
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.content_safety_confidence'
        custom_spelling:
          type: array
          items:
            "$ref": "#/components/schemas/AssemblyAiAsyncChunkedCustomSpelling"
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.custom_spelling'
        disfluencies:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.disfluencies'
        filter_profanity:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.filter_profanity'
        format_text:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.format_text'
        language_code:
          type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.language_code'
        language_confidence_threshold:
          type: number
          format: double
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.language_confidence_threshold'
        language_detection:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.language_detection'
        punctuate:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.punctuate'
        redact_pii:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.redact_pii'
        redact_pii_policies:
          type: array
          items:
            type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.redact_pii_policies'
        redact_pii_sub:
          type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.redact_pii_sub'
        speaker_labels:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.speaker_labels'
        speakers_expected:
          type: integer
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.speakers_expected'
        speech_model:
          type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.speech_model'
        speech_threshold:
          type: number
          format: double
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.speech_threshold'
        word_boost:
          type: array
          items:
            type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.word_boost'
        chunk_minimum:
          type: integer
          default: 180
          description: Minimum number of seconds of audio to buffer before looking
            for a gap in speech.
        chunk_maximum:
          type: integer
          default: 300
          description: |-
            Maximum number of seconds to buffer if no gap
                                 in speech is found. Limited to 600 seconds (10 minutes).
    AssemblyAiStreaming:
      type: object
      properties:
        word_boost:
          type: array
          items:
            type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/streaming/realtime#request.query.word_boost'
    AssemblyaiAsyncTranscription:
      type: object
      properties:
        language:
          type: string
          description: 'Docs: https://www.assemblyai.com/docs/getting-started/supported-languages'
        audio_end_at:
          type: integer
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.audio_end_at'
        audio_start_from:
          type: integer
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.audio_start_from'
        auto_chapters:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.auto_chapters'
        auto_highlights:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.auto_highlights'
        boost_param:
          type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.boost_param'
        content_safety:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.content_safety'
        content_safety_confidence:
          type: integer
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.content_safety_confidence'
        custom_spelling:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.custom_spelling'
        custom_topics:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.custom_topics'
        disfluencies:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.disfluencies'
        dual_channel:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.dual_channel'
        entity_detection:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.entity_detection'
        filter_profanity:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.filter_profanity'
        format_text:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.format_text'
        iab_categories:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.iab_categories'
        language_code:
          type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.language_code'
        language_confidence_threshold:
          type: number
          format: double
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.language_confidence_threshold'
        language_detection:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.language_detection'
        punctuate:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.punctuate'
        redact_pii:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.redact_pii'
        redact_pii_audio:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.redact_pii_audio'
        redact_pii_audio_quality:
          type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.redact_pii_audio_quality'
        redact_pii_policies:
          type: array
          items:
            type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.redact_pii_policies'
        redact_pii_sub:
          type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.redact_pii_sub'
        sentiment_analysis:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.sentiment_analysis'
        speaker_labels:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.speaker_labels'
        speakers_expected:
          type: integer
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.speakers_expected'
        speech_model:
          type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.speech_model'
        speech_threshold:
          type: number
          format: double
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.speech_threshold'
        summarization:
          type: boolean
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.summarization'
        summary_model:
          type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.summary_model'
        summary_type:
          type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.summary_type'
        topics:
          type: array
          items:
            type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.topics'
        word_boost:
          type: array
          items:
            type: string
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcripts/submit#request.body.word_boost'
    AudioOutput:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/AudioOutputData"
        replay_on_participant_join:
          allOf:
          - "$ref": "#/components/schemas/AudioOutputReplay"
          description: Specify this parameter if you want the audio to be replayed
            when additional participants join the call.
      required:
      - data
    AudioOutputData:
      type: object
      properties:
        kind:
          allOf:
          - "$ref": "#/components/schemas/AudioOutputDataKindEnum"
          description: |-
            The kind of data encoded in b64_data

            * `mp3` - mp3
        b64_data:
          type: string
          writeOnly: true
          description: 'Data encoded in Base64 format, using the standard alphabet
            (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)'
          maxLength: 1835008
      required:
      - b64_data
      - kind
    AudioOutputDataKindEnum:
      enum:
      - mp3
      type: string
      description: "* `mp3` - mp3"
    AudioOutputReplay:
      type: object
      properties:
        debounce_mode:
          allOf:
          - "$ref": "#/components/schemas/DebounceModeEnum"
          default: trailing
          description: "Leading: The debounce timer will start counting down when
            the first participant joins.\nTrailing: The debounce timer will start
            counting down when the last participant joins.\nFor example with a debounce_interval
            of 10, if two participants join 9 seconds apart: \n - In `Leading` mode
            the audio will play 10 seconds after the 1st participant joined (1 second
            after the 2nd participant)\n - In `Trailing` mode the audio will play
            10 seconds after the 2nd participant joined (19 seconds after the 1st
            participant)\n\n* `leading` - leading\n* `trailing` - trailing"
        debounce_interval:
          type: integer
          description: The amount of time to wait for additional participants to join
            before replaying the audio.
        disable_after:
          type: integer
          description: The number of seconds after which the audio will no longer
            replay when new participants join. This parameter is useful to prevent
            the bot from interrupting a meeting, if a late participant joins.
      required:
      - debounce_interval
    AudioSeparatePart:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        participant:
          allOf:
          - "$ref": "#/components/schemas/Participant"
          readOnly: true
        start_timestamp:
          allOf:
          - "$ref": "#/components/schemas/MediaSeparatePartTimestamp"
          readOnly: true
        duration:
          type: number
          format: double
          readOnly: true
        download_url:
          type: string
          format: uri
          readOnly: true
      required:
      - created_at
      - download_url
      - duration
      - id
      - participant
      - start_timestamp
    AutomaticAudioOutput:
      type: object
      properties:
        in_call_recording:
          "$ref": "#/components/schemas/AudioOutput"
      required:
      - in_call_recording
    AutomaticLeave:
      type: object
      properties:
        waiting_room_timeout:
          type: integer
          minimum: 30
          default: 1200
          description: The number of seconds after which the bot will automatically
            leave the call, if it has not been let in from the waiting room.Note that
            this has a max value of 600 seconds for Google Meet and 1800 for Microsoft
            Teams.
        noone_joined_timeout:
          type: integer
          minimum: 30
          default: 1200
          description: The number of seconds after which the bot will automatically
            leave the call, if it has joined the meeting but no other participant
            has joined.
        everyone_left_timeout:
          type: integer
          minimum: 1
          default: 2
          description: The number of seconds after which the bot will automatically
            leave the call, if there were other participants in the call who have
            all left.
        in_call_not_recording_timeout:
          type: integer
          minimum: 1
          default: 3600
          description: The number of seconds after which the bot will automatically
            leave the call, if it has joined the call and is not recording.This includes
            all periods when the bot is not recording, even if the bot has recorded
            previously.
        in_call_recording_timeout:
          type: integer
          minimum: 1
          description: The number of seconds after which the bot will automatically
            leave the call, if it has joined the call and started recording it. This
            can be used to enforce a maximum recording time limit for a bot. There
            is no default value for this parameter, meaning a bot will continue to
            record for as long as the meeting lasts.
        recording_permission_denied_timeout:
          type: integer
          minimum: 1
          default: 3600
          description: The number of seconds after which the bot will automatically
            leave the call, if it has joined the call but has not started recording.
            For e.g This can occur due to bot being denied permission to record(Zoom
            meetings).
        silence_detection:
          allOf:
          - "$ref": "#/components/schemas/AutomaticLeaveSilenceDetection"
          default:
            timeout: 3600
            activate_after: 1200
        bot_detection:
          allOf:
          - "$ref": "#/components/schemas/AutomaticLeaveBotDetection"
          default:
            using_participant_events:
              timeout: 600
              activate_after: 1200
    AutomaticLeaveBotDetection:
      type: object
      properties:
        using_participant_events:
          "$ref": "#/components/schemas/AutomaticLeaveBotDetectionUsingParticipantEvents"
        using_participant_names:
          "$ref": "#/components/schemas/AutomaticLeaveBotDetectionUsingParticipantNames"
    AutomaticLeaveBotDetectionUsingParticipantEvents:
      type: object
      properties:
        timeout:
          type: integer
          minimum: 10
          default: 600
          description: The number of seconds after which the bot will automatically
            leave the call if all other participants(in call) are detected as bots
            using this heuristic. A participant is considered a bot if they have no
            audio or screenshare activity for the duration of the call.
        activate_after:
          type: integer
          minimum: 1
          default: 1200
          description: The number of seconds(post recording start) after which the
            bot will start detecting other participants as bots using this heuristic.
            This parameter can be helpful if the meeting tends to start late, so the
            bot does not preemptively leave.
    AutomaticLeaveBotDetectionUsingParticipantNames:
      type: object
      properties:
        timeout:
          type: integer
          minimum: 10
          description: The number of seconds after which the bot will automatically
            leave the call if all other participants(in call) are detected as bots
            using this heuristic. A participant is considered a bot if their name
            contains any of the strings specified in the `matches` parameter(case
            insensitive match).
        activate_after:
          type: integer
          minimum: 1
          description: The number of seconds(post recording start) after which the
            bot will start detecting other participants as bots using this heuristic.
            This parameter can be helpful if the meeting tends to start late, so the
            bot does not preemptively leave.
        matches:
          type: array
          items:
            type: string
          description: A list of strings that the bot will use to detect other bots.
            If a participant's name contains any of these strings(case insensitive
            match), they will be considered a bot. If all remaining participants in
            the call are detected as bots(except the bot itself), the bot will automatically
            leave the call.For e.g ['notetaker', 'recorder', 'assistant']
      required:
      - activate_after
      - matches
      - timeout
    AutomaticLeaveSilenceDetection:
      type: object
      properties:
        timeout:
          type: integer
          minimum: 10
          default: 3600
          description: The number of seconds of continuous silence after which the
            bot will automatically leave the call.
        activate_after:
          type: integer
          minimum: 1
          default: 1200
          description: The number of seconds after which the bot will start detecting
            silence once it has started recording the call. This parameter can be
            helpful if the meeting tends to start late, so the bot does not preemptively
            leave.
    AutomaticVideoOutput:
      type: object
      properties:
        in_call_recording:
          allOf:
          - "$ref": "#/components/schemas/VideoOutput"
          description: The video that will be automatically output when the bot is
            in the **in_call_recording** state.
        in_call_not_recording:
          allOf:
          - "$ref": "#/components/schemas/VideoOutput"
          description: The video that will be automatically output when the bot is
            in the **in_call_not_recording** state. If not specified the bot will
            fallback to in_call_recording output if available.
    AwsTranscribeStreaming:
      type: object
      properties:
        language_code:
          type: string
        content_redaction_type:
          type: string
        language_model_name:
          type: string
        language_options:
          type: string
        language_identification:
          type: boolean
        partial_results_stability:
          type: string
        pii_entity_types:
          type: string
        preferred_language:
          type: string
        show_speaker_label:
          type: boolean
        vocabulary_filter_method:
          type: string
        vocabulary_filter_names:
          type: string
        vocabulary_names:
          type: string
        vocabulary_name:
          type: string
    BartyCredential:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        oauth_app:
          type: string
          format: uuid
        refresh_token:
          type: string
          writeOnly: true
        current_locks:
          readOnly: true
        status:
          type: string
          readOnly: true
        extra: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - current_locks
      - id
      - oauth_app
      - refresh_token
      - status
    BartyOauthApp:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        platform:
          "$ref": "#/components/schemas/Platform128Enum"
        client_id:
          type: string
        client_secret:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - client_id
      - client_secret
      - created_at
      - id
      - platform
    Bot:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        meeting_url:
          type: string
          description: The url of the meeting. For example, https://zoom.us/j/123?pwd=456.
            This field will be cleared a few days after the bot has joined a call.
        bot_name:
          type: string
          default: Meeting Notetaker
          description: |-
            The name of the bot that will be displayed in the call.
            *(Note: Authenticated Google Meet bots will use the Google account name and this field will be ignored.)*
          maxLength: 100
        join_at:
          type: string
          format: date-time
          nullable: true
          description: The time at which the bot will join the call, formatted in
            ISO 8601. This field can only be read from scheduled bots that have not
            yet joined a call. Once a bot has joined a call, it's join_at will be
            cleared.
        video_url:
          type: string
          format: uri
          readOnly: true
          description: A URL where the video recorded by the bot can be downloaded.
            This is null while the recording is in progress, and will be populated
            when the recording is completed. The returned URL is valid for 6 hours
            from the API call. A fresh URL can be obtained at any point by calling
            the API again.
        media_retention_end:
          type: string
          format: date-time
          readOnly: true
          description: After this date the video and transcript will be deleted. This
            date is 7 days from when the recording ended.
        status_changes:
          type: array
          items:
            "$ref": "#/components/schemas/BotEvent"
          readOnly: true
        meeting_metadata:
          allOf:
          - "$ref": "#/components/schemas/MeetingMetadata"
          readOnly: true
          nullable: true
        meeting_participants:
          type: array
          items:
            "$ref": "#/components/schemas/MeetingParticipant"
          readOnly: true
        real_time_transcription:
          allOf:
          - "$ref": "#/components/schemas/RealTimeTranscription"
          nullable: true
          description: The settings for real-time transcription.
        real_time_media:
          allOf:
          - "$ref": "#/components/schemas/RealTimeMedia"
          nullable: true
          description: The settings for real-time media output.
        transcription_options:
          allOf:
          - "$ref": "#/components/schemas/TranscriptionOptions"
          nullable: true
        recording_mode:
          allOf:
          - "$ref": "#/components/schemas/RecordingModeEnum"
          default: speaker_view
          description: |-
            The layout of the output video.

            * `speaker_view` - speaker_view
            * `gallery_view` - gallery_view
            * `gallery_view_v2` - gallery_view_v2
            * `audio_only` - audio_only
        recording_mode_options:
          allOf:
          - "$ref": "#/components/schemas/RecordingModeOptions"
          nullable: true
          description: Additional options for recording mode.
        include_bot_in_recording:
          "$ref": "#/components/schemas/BotIncludeInRecording"
        recordings:
          type: array
          items:
            "$ref": "#/components/schemas/BotRecordingEmbed"
          readOnly: true
        output_media:
          allOf:
          - "$ref": "#/components/schemas/OutputMedia"
          nullable: true
          description: Settings for the bot output media.
        automatic_video_output:
          allOf:
          - "$ref": "#/components/schemas/AutomaticVideoOutput"
          nullable: true
          description: Settings for the bot to output video. Image should be 16:9.
            Recommended resolution is 640x360.
        automatic_audio_output:
          allOf:
          - "$ref": "#/components/schemas/AutomaticAudioOutput"
          nullable: true
          description: "(BETA) Settings for the bot to output audio."
        chat:
          allOf:
          - "$ref": "#/components/schemas/Chat"
          nullable: true
          description: "(BETA) Settings for the bot to send chat messages. \n*(Note:
            Chat functionality is only supported for Zoom, Google Meet and Microsoft
            Teams currently.)*"
        automatic_leave:
          allOf:
          - "$ref": "#/components/schemas/AutomaticLeave"
          nullable: true
        variant:
          allOf:
          - "$ref": "#/components/schemas/BotVariant"
          nullable: true
          description: 'Configure bot variants per meeting platforms, e.g. {"zoom":
            "web_4_core"}.'
        calendar_meetings:
          type: array
          items:
            "$ref": "#/components/schemas/BotCalendarMeeting"
          readOnly: true
          description: The calendar meetings associated with this bot. This field
            is **populated only for bots that are dispatched via Calendar V1 API integration**.
        zoom:
          allOf:
          - "$ref": "#/components/schemas/Zoom"
          nullable: true
          description: Zoom specific parameters
        google_meet:
          allOf:
          - "$ref": "#/components/schemas/GoogleMeet"
          nullable: true
          description: Google Meet specific parameters
        slack_authenticator:
          allOf:
          - "$ref": "#/components/schemas/SlackAuthenticator"
          nullable: true
          description: Slack Authenticator specific parameters
        slack_huddle_observer:
          allOf:
          - "$ref": "#/components/schemas/SlackHuddleObserver"
          nullable: true
          description: Slack Huddle Observer specific parameters
        metadata:
          type: object
          additionalProperties:
            type: string
            nullable: true
        recording:
          type: string
          readOnly: true
      required:
      - calendar_meetings
      - id
      - media_retention_end
      - meeting_metadata
      - meeting_participants
      - meeting_url
      - recording
      - recordings
      - status_changes
      - video_url
    BotAnalysis:
      type: object
      properties:
        job_id:
          type: string
          format: uuid
          readOnly: true
        assemblyai_async_transcription:
          allOf:
          - "$ref": "#/components/schemas/AssemblyaiAsyncTranscription"
          writeOnly: true
        speechmatics_async_transcription:
          allOf:
          - "$ref": "#/components/schemas/SpeechmaticsAsyncTranscription"
          writeOnly: true
        rev_async_transcription:
          allOf:
          - "$ref": "#/components/schemas/RevAsyncTranscription"
          writeOnly: true
        deepgram_async_transcription:
          allOf:
          - "$ref": "#/components/schemas/DeepgramAsyncTranscription"
          writeOnly: true
        gladia_v2_async_transcription:
          allOf:
          - "$ref": "#/components/schemas/GladiaV2AsyncTranscription"
          writeOnly: true
      required:
      - job_id
    BotCalendarMeeting:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        start_time:
          type: string
          format: date-time
          readOnly: true
        end_time:
          type: string
          format: date-time
          readOnly: true
        calendar_user:
          allOf:
          - "$ref": "#/components/schemas/BotCalendarUser"
          readOnly: true
      required:
      - calendar_user
      - end_time
      - id
      - start_time
    BotCalendarUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        external_id:
          type: string
          readOnly: true
      required:
      - external_id
      - id
    BotEvent:
      type: object
      properties:
        code:
          type: string
          readOnly: true
        message:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        sub_code:
          type: string
          readOnly: true
      required:
      - code
      - created_at
      - message
      - sub_code
    BotIncludeInRecording:
      type: object
      properties:
        audio:
          type: boolean
          default: false
          description: Whether to record audio from the bot.
    BotRecordingEmbed:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        started_at:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true
      required:
      - created_at
      - id
    BotScreenshot:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        recorded_at:
          type: string
          format: date-time
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
          description: A URL where the bot screenshot can be acccessed from.
      required:
      - id
      - recorded_at
      - url
    BotVariant:
      type: object
      properties:
        zoom:
          allOf:
          - "$ref": "#/components/schemas/ZoomEnum"
          description: |-
            Choose the bot variant to use for Zoom meetings.

            * `web` - web
            * `web_4_core` - web_4_core
            * `native` - native
        google_meet:
          allOf:
          - "$ref": "#/components/schemas/GoogleMeetEnum"
          description: |-
            Choose the bot variant to use for Google Meet meetings.

            * `web` - web
            * `web_4_core` - web_4_core
        microsoft_teams:
          allOf:
          - "$ref": "#/components/schemas/MicrosoftTeamsEnum"
          description: |-
            Choose the bot variant to use for Microsoft Teams meetings.

            * `web` - web
            * `web_4_core` - web_4_core
    Calendar:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        oauth_client_id:
          type: string
          maxLength: 2000
        oauth_client_secret:
          type: string
          maxLength: 2000
        oauth_refresh_token:
          type: string
          maxLength: 2000
        platform:
          "$ref": "#/components/schemas/CalendarPlatformEnum"
        webhook_url:
          type: string
          format: uri
          maxLength: 2000
          deprecated: true
        oauth_email:
          type: string
          format: email
          maxLength: 2000
        platform_email:
          type: string
          readOnly: true
          nullable: true
        status:
          type: string
          readOnly: true
        status_changes:
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - oauth_client_id
      - oauth_client_secret
      - oauth_refresh_token
      - platform
      - platform_email
      - status
      - status_changes
      - updated_at
    CalendarAccount:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        platform:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
      required:
      - email
      - id
      - platform
    CalendarAccountAccessTokenError:
      type: object
      properties:
        code:
          "$ref": "#/components/schemas/CodeEnum"
        message:
          type: string
      required:
      - code
      - message
    CalendarAuthenticateRequest:
      type: object
      properties:
        user_id:
          type: string
          description: The unique id of the user in your system.
      required:
      - user_id
    CalendarAuthenticateResponse:
      type: object
      properties:
        token:
          type: string
          description: The authentication token for the user.
      required:
      - token
    CalendarEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        start_time:
          type: string
          format: date-time
          readOnly: true
        end_time:
          type: string
          format: date-time
          readOnly: true
        calendar_id:
          type: string
          format: uuid
          readOnly: true
        raw:
          readOnly: true
        platform:
          type: string
          readOnly: true
        platform_id:
          type: string
          readOnly: true
        ical_uid:
          type: string
          readOnly: true
        meeting_platform:
          nullable: true
          readOnly: true
          oneOf:
          - "$ref": "#/components/schemas/MeetingPlatformEnum"
          - "$ref": "#/components/schemas/NullEnum"
        meeting_url:
          type: string
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_deleted:
          type: boolean
          readOnly: true
        bots:
          type: array
          items:
            "$ref": "#/components/schemas/CalendarEventBot"
          readOnly: true
      required:
      - bots
      - calendar_id
      - created_at
      - end_time
      - ical_uid
      - id
      - is_deleted
      - meeting_platform
      - meeting_url
      - platform
      - platform_id
      - raw
      - start_time
      - updated_at
    CalendarEventAddBot:
      type: object
      properties:
        deduplication_key:
          type: string
          writeOnly: true
          description: Pass this key to deduplicate bots across multiple calendar
            events. Please ensure this remain consistent across all calendar events
            that mush share a single bot. For more details, refer to Calendar V2 scheduling
            guide.
          maxLength: 2000
        bot_config:
          type: object
          additionalProperties: {}
          writeOnly: true
          description: |-
            The config object(JSON) to be passed to the bot. It supports all properties available in **[Create Bot request. ](https://docs.recall.ai/reference/bot_create)**

            `meeting_url` - automatically populated from the calendar event.
            `join_at` - automatically populated from the calendar event unless specified in bot_config
      required:
      - bot_config
      - deduplication_key
    CalendarEventBot:
      type: object
      properties:
        bot_id:
          type: string
          format: uuid
          readOnly: true
        start_time:
          type: string
          format: date-time
          readOnly: true
        deduplication_key:
          type: string
          readOnly: true
        meeting_url:
          type: string
          readOnly: true
      required:
      - bot_id
      - deduplication_key
      - meeting_url
      - start_time
    CalendarMeeting:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        override_should_record:
          type: boolean
          nullable: true
        title:
          type: string
          readOnly: true
        will_record:
          type: boolean
          readOnly: true
        will_record_reason:
          type: string
          readOnly: true
        start_time:
          type: string
          format: date-time
          readOnly: true
        end_time:
          type: string
          format: date-time
          readOnly: true
        platform:
          type: string
          readOnly: true
        platform_id:
          type: string
          readOnly: true
        meeting_platform:
          type: string
          readOnly: true
        calendar_platform:
          type: string
          readOnly: true
        zoom_invite:
          allOf:
          - "$ref": "#/components/schemas/ZoomInvite"
          readOnly: true
        teams_invite:
          allOf:
          - "$ref": "#/components/schemas/TeamsInvite"
          readOnly: true
        meet_invite:
          allOf:
          - "$ref": "#/components/schemas/MeetInvite"
          readOnly: true
        webex_invite:
          allOf:
          - "$ref": "#/components/schemas/WebexInvite"
          readOnly: true
        bot_id:
          type: string
          format: uuid
          nullable: true
          readOnly: true
        is_external:
          type: boolean
          readOnly: true
        is_hosted_by_me:
          type: boolean
          readOnly: true
        is_recurring:
          type: boolean
          readOnly: true
        organizer_email:
          type: string
          readOnly: true
        attendee_emails:
          type: array
          items:
            type: string
          readOnly: true
        attendees:
          type: array
          items:
            "$ref": "#/components/schemas/MeetingAttendee"
          readOnly: true
        ical_uid:
          type: string
          readOnly: true
        visibility:
          type: string
          readOnly: true
          description: "\n            For Google calendar meetings('default' | 'public'
            | 'private' | 'confidential').\n            For Microsoft Outlook('normal'
            | 'personal' | 'private' | 'confidential').\n            Additionally,
            this field may contain 'null' value.\n        "
      required:
      - attendee_emails
      - attendees
      - bot_id
      - calendar_platform
      - end_time
      - ical_uid
      - id
      - is_external
      - is_hosted_by_me
      - is_recurring
      - meet_invite
      - meeting_platform
      - organizer_email
      - platform
      - platform_id
      - start_time
      - teams_invite
      - title
      - visibility
      - webex_invite
      - will_record
      - will_record_reason
      - zoom_invite
    CalendarPlatformEnum:
      enum:
      - google_calendar
      - microsoft_outlook
      type: string
      description: |-
        * `google_calendar` - Google Calendar
        * `microsoft_outlook` - Microsoft Outlook
    CalendarUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        external_id:
          type: string
        connections:
          type: array
          items:
            "$ref": "#/components/schemas/CalendarUserConnection"
          readOnly: true
        preferences:
          "$ref": "#/components/schemas/PatchedCalendarRecordingPreferences"
      required:
      - connections
      - id
    CalendarUserConnection:
      type: object
      properties:
        connected:
          type: boolean
        platform:
          type: string
        email:
          type: string
        id:
          type: string
      required:
      - connected
      - platform
    CalendarUserDisconnectPlatform:
      type: object
      properties:
        platform:
          allOf:
          - "$ref": "#/components/schemas/CalendarUserDisconnectPlatformPlatformEnum"
          description: |-
            The platform to disconnect. ('google' or 'microsoft')

            * `google` - Google
            * `microsoft` - Microsoft
      required:
      - platform
    CalendarUserDisconnectPlatformPlatformEnum:
      enum:
      - google
      - microsoft
      type: string
      description: |-
        * `google` - Google
        * `microsoft` - Microsoft
    Camera:
      type: object
      properties:
        kind:
          "$ref": "#/components/schemas/Kind188Enum"
        config:
          "$ref": "#/components/schemas/OutputMediaWebpage"
      required:
      - config
      - kind
    Chat:
      type: object
      properties:
        on_bot_join:
          "$ref": "#/components/schemas/ChatOnBotJoin"
        on_participant_join:
          "$ref": "#/components/schemas/ChatOnParticipantJoin"
    ChatOnBotJoin:
      type: object
      properties:
        send_to:
          "$ref": "#/components/schemas/SendToEnum"
        message:
          type: string
          maxLength: 4096
        pin:
          type: boolean
          default: false
          description: Pin message after sending.  Only Google Meet supported at this
            time
      required:
      - message
      - send_to
    ChatOnParticipantJoin:
      type: object
      properties:
        message:
          type: string
          maxLength: 4096
        exclude_host:
          type: boolean
      required:
      - exclude_host
      - message
    CodeEnum:
      enum:
      - no_oauth_credentials
      - bad_refresh_token
      - error
      type: string
      description: |-
        * `no_oauth_credentials` - no_oauth_credentials
        * `bad_refresh_token` - bad_refresh_token
        * `error` - error
    DebounceModeEnum:
      enum:
      - leading
      - trailing
      type: string
      description: |-
        * `leading` - leading
        * `trailing` - trailing
    DeepgramAsyncTranscription:
      type: object
      properties:
        tier:
          type: string
          description: 'Docs: https://developers.deepgram.com/documentation/features/tier/'
        model:
          type: string
          description: 'Docs: https://developers.deepgram.com/documentation/features/model/'
        version:
          type: string
          description: 'Docs: https://developers.deepgram.com/documentation/features/version/'
        language:
          type: string
          description: 'Docs: https://developers.deepgram.com/documentation/features/language/'
        detect_language:
          oneOf:
          - type: boolean
          - type: array
            items:
              type: string
          description: 'Docs: https://developers.deepgram.com/documentation/features/detect-language/'
        punctuate:
          type: boolean
          description: 'Docs: https://developers.deepgram.com/documentation/features/punctuate/'
        profanity_filter:
          type: boolean
          description: 'Docs: https://developers.deepgram.com/documentation/features/profanity-filter/'
        redact:
          type: array
          items:
            type: string
          description: 'Docs: https://developers.deepgram.com/documentation/features/redact/'
        diarize:
          type: boolean
          description: 'Docs: https://developers.deepgram.com/documentation/features/diarize/'
        diarize_version:
          type: string
          description: 'Docs: https://developers.deepgram.com/documentation/features/diarize/'
        smart_format:
          type: boolean
          description: 'Docs: https://developers.deepgram.com/documentation/features/smart-format/'
        numerals:
          type: boolean
          description: 'Docs: https://developers.deepgram.com/documentation/features/numerals/'
        search:
          type: array
          items:
            type: string
          description: 'Docs: https://developers.deepgram.com/documentation/features/search/'
        replace:
          type: array
          items:
            type: string
          description: 'Docs: https://developers.deepgram.com/documentation/features/replace/'
        keywords:
          type: array
          items:
            type: string
          description: 'Docs: https://developers.deepgram.com/documentation/features/keywords/'
        summarize:
          type: boolean
          description: 'Docs: https://developers.deepgram.com/documentation/features/summarize/'
        detect_topics:
          type: boolean
          description: 'Docs: https://developers.deepgram.com/documentation/features/detect-topics/'
        tag:
          type: boolean
          description: 'Docs: https://developers.deepgram.com/documentation/features/tag/'
        credential_id:
          type: string
          description: The ID of the Deepgram credential to use for this transcription.  If
            not specified, the default credential will be used.
    DeepgramStreaming:
      type: object
      properties:
        tier:
          type: string
        model:
          type: string
        version:
          type: string
        language:
          type: string
        profanity_filter:
          type: boolean
        redact:
          type: array
          items:
            type: string
        diarize:
          type: boolean
        diarize_version:
          type: string
        smart_format:
          type: boolean
        ner:
          type: boolean
        alternatives:
          type: integer
        numerals:
          type: boolean
        search:
          type: array
          items:
            type: string
        replace:
          type: array
          items:
            type: string
        keywords:
          type: array
          items:
            type: string
        interim_results:
          type: boolean
        endpointing:
          type: integer
        log_data:
          type: boolean
        mip_opt_out:
          type: boolean
    Endpoint:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          "$ref": "#/components/schemas/EndpointTypeEnum"
      required:
      - id
      - type
    EndpointTypeEnum:
      enum:
      - s3
      - rtmp
      - websocket
      - webhook
      - database
      type: string
      description: |-
        * `s3` - S3
        * `rtmp` - Rtmp
        * `websocket` - Websocket
        * `webhook` - Webhook
        * `database` - Database
    GladiaStreaming:
      type: object
      properties:
        language_behaviour:
          "$ref": "#/components/schemas/LanguageBehaviourEnum"
        language:
          type: string
        transcription_hint:
          type: string
        endpointing:
          type: integer
        model_type:
          "$ref": "#/components/schemas/ModelTypeEnum"
        audio_enhancer:
          type: boolean
    GladiaV2AsyncAudioToLlmConfig:
      type: object
      properties:
        prompts:
          type: array
          items:
            type: string
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/audio%20to%20llm'
      required:
      - prompts
    GladiaV2AsyncCodeSwitchingConfig:
      type: object
      properties:
        languages:
          type: array
          items:
            type: string
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/languages'
      required:
      - languages
    GladiaV2AsyncDiarizationConfig:
      type: object
      properties:
        number_of_speakers:
          type: integer
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speaker-diarization#improving-diarization-accuracy'
        min_speakers:
          type: integer
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speaker-diarization#improving-diarization-accuracy'
        max_speakers:
          type: integer
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speaker-diarization#improving-diarization-accuracy'
    GladiaV2AsyncSubtitlesConfig:
      type: object
      properties:
        formats:
          type: array
          items:
            type: string
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#export-srt-or-vtt-caption-files'
      required:
      - formats
    GladiaV2AsyncSummarizationConfig:
      type: object
      properties:
        type:
          type: string
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/summarization'
    GladiaV2AsyncTranscription:
      type: object
      properties:
        context_prompt:
          type: string
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#context-prompt'
        custom_vocabulary:
          type: array
          items:
            type: string
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#custom-vocabulary'
        detect_language:
          type: boolean
          default: true
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#automatic-language-detection'
        enable_code_switching:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#multiple-languages-detection-code-switching'
        code_switching_config:
          allOf:
          - "$ref": "#/components/schemas/GladiaV2AsyncCodeSwitchingConfig"
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#guided-code-switching'
        language:
          type: string
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#manual-transcription-language'
        subtitles:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#export-srt-or-vtt-caption-files'
        subtitles_config:
          allOf:
          - "$ref": "#/components/schemas/GladiaV2AsyncSubtitlesConfig"
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#export-srt-or-vtt-caption-files'
        diarization:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speaker-diarization'
        diarization_config:
          allOf:
          - "$ref": "#/components/schemas/GladiaV2AsyncDiarizationConfig"
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speaker-diarization'
        translation:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/translation'
        translation_config:
          allOf:
          - "$ref": "#/components/schemas/GladiaV2AsyncTranslationConfig"
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/translation'
        summarization:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/summarization'
        summarization_config:
          allOf:
          - "$ref": "#/components/schemas/GladiaV2AsyncSummarizationConfig"
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/summarization'
        moderation:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/moderation'
        named_entity_recognition:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/named%20entity%20recognition'
        chapterization:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/chapterization'
        name_consistency:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#name-consistency'
        custom_spelling:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#custom-spelling'
        custom_spelling_config:
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#custom-spelling'
        structured_data_extraction:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/structured%20data%20extraction'
        structured_data_extraction_config:
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/structured%20data%20extraction'
        sentiment_analysis:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/sentiment%20analysis'
        audio_to_llm:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/audio%20to%20llm'
        audio_to_llm_config:
          allOf:
          - "$ref": "#/components/schemas/GladiaV2AsyncAudioToLlmConfig"
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/audio%20to%20llm'
        custom_metadata:
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#adding-custom-metadata'
        sentences:
          type: boolean
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/speech-recognition#sentences'
        display_mode:
          type: boolean
          description: 'Docs: https://docs.gladia.io/api-reference/api-v2/Transcription/post-v2transcription'
        punctuation_enhanced:
          type: boolean
    GladiaV2AsyncTranslationConfig:
      type: object
      properties:
        target_languages:
          type: array
          items:
            type: string
          description: 'Docs: https://docs.gladia.io/chapters/speech-to-text-api/pages/languages'
        model:
          type: string
          description: 'Docs: https://docs.gladia.io/chapters/audio-intelligence/pages/translation'
      required:
      - target_languages
    GoogleLogin:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          description: The email address of the google account to use for login.
        is_active:
          type: boolean
          description: 'If the login should be used for round robin. (default: true)'
        sso_v2_workspace_domain:
          type: string
          description: The primary domain name of your Google Workspace Account used
            for SSO.
        sso_v2_private_key:
          type: string
          description: PEM-formatted private key used for signing SSO requests.
        sso_v2_cert:
          type: string
          description: PEM-formatted x509 certificate which is registered in your
            Google Workspace SSO Profile.
        group_id:
          type: string
          format: uuid
          description: The id of the login group this login belongs to.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - group_id
      - id
      - sso_v2_cert
      - sso_v2_private_key
      - sso_v2_workspace_domain
      - updated_at
    GoogleLoginGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Name of the login group. It can used to filter out login groups
            when retrieving them via API.
          maxLength: 2000
        login_mode:
          allOf:
          - "$ref": "#/components/schemas/LoginModeEnum"
          description: |-
            Login behaviour of bots that use this login group.

            * `always` - Always
            * `only_if_required` - Only If Required
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        logins:
          type: array
          items:
            "$ref": "#/components/schemas/GoogleLogin"
          readOnly: true
      required:
      - created_at
      - id
      - login_mode
      - logins
      - name
      - updated_at
    GoogleMeet:
      type: object
      properties:
        login_required:
          type: boolean
          nullable: true
          description: Specify if the bot should always login to Google before joining
            the meeting. This value will override the default value set on bot's Google
            Meet login credentials on the account. When set to 'false', the bot will
            only login if required by the meeting.
        google_login_group_id:
          type: string
          format: uuid
          nullable: true
          description: The ID of the google login group to use for this meeting. If
            specified, the 'login_required' field value will be ignored and bot will
            use the 'login_mode' value on the login group.
    GoogleMeetEnum:
      enum:
      - web
      - web_4_core
      type: string
      description: |-
        * `web` - web
        * `web_4_core` - web_4_core
    Job:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
          nullable: true
        status:
          "$ref": "#/components/schemas/JobStatusEnum"
        errors:
          type: array
          items: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        bot_id:
          type: string
          format: uuid
          nullable: true
          readOnly: true
        provider_job_ids:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - bot_id
      - created_at
      - errors
      - id
      - name
      - provider_job_ids
      - status
    JobStatusEnum:
      enum:
      - in_progress
      - completed
      - errored
      type: string
      description: |-
        * `in_progress` - In Progress
        * `completed` - Completed
        * `errored` - Errored
    Kind188Enum:
      enum:
      - webpage
      type: string
      description: "* `webpage` - webpage"
    LanguageBehaviourEnum:
      enum:
      - manual
      - automatic single language
      - automatic multiple languages
      type: string
      description: |-
        * `manual` - Manual
        * `automatic single language` - Automatic Single Language
        * `automatic multiple languages` - Automatic Multiple Language
    LanguageIdentificationConfig:
      type: object
      properties:
        expected_languages:
          type: array
          items:
            type: string
        low_confidence_action:
          type: string
          description: 'Enum: "allow" "reject" "use_default_language". Action to take
            if all of the predicted languages are below the confidence threshold'
        default_language:
          type: string
    LegacyRecording:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        outputs:
          type: array
          items:
            "$ref": "#/components/schemas/Output"
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        expires_at:
          type: string
          format: date-time
          nullable: true
      required:
      - created_at
      - id
      - outputs
    Log:
      type: object
      properties:
        level:
          type: string
          maxLength: 200
        message:
          type: string
          maxLength: 2000
        created_at:
          type: string
          format: date-time
      required:
      - level
      - message
    LoginModeEnum:
      enum:
      - always
      - only_if_required
      type: string
      description: |-
        * `always` - Always
        * `only_if_required` - Only If Required
    MediaSeparatePartTimestamp:
      type: object
      properties:
        absolute:
          type: string
          format: date-time
          readOnly: true
        relative:
          type: number
          format: double
          readOnly: true
          description: The timestamp relative to the start of the recording.
      required:
      - absolute
      - relative
    MeetInvite:
      type: object
      properties:
        meeting_id:
          type: string
      required:
      - meeting_id
    MeetingAttendee:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        is_organizer:
          type: boolean
        status:
          "$ref": "#/components/schemas/MeetingAttendeeStatusEnum"
      required:
      - email
      - is_organizer
      - name
      - status
    MeetingAttendeeStatusEnum:
      enum:
      - accepted
      - declined
      - tentative
      - not_available
      type: string
      description: |-
        * `accepted` - accepted
        * `declined` - declined
        * `tentative` - tentative
        * `not_available` - not_available
    MeetingChatMessage:
      type: object
      properties:
        text:
          type: string
          readOnly: true
          description: The text of the chat message.
        created_at:
          type: string
          format: date-time
          readOnly: true
        to:
          allOf:
          - "$ref": "#/components/schemas/ToEnum"
          description: |-
            The recipient(s) of the chat message.

            * `everyone` - Everyone
            * `only_bot` - Only Bot
        sender:
          allOf:
          - "$ref": "#/components/schemas/MeetingChatMessageSender"
          readOnly: true
      required:
      - created_at
      - sender
      - text
      - to
    MeetingChatMessageSender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: The id of the sender. This matches the 'id' property in `meeting_participants`
            field of bot retrieve endpoint response.
        name:
          type: string
          maxLength: 200
        is_host:
          type: boolean
          nullable: true
          description: Is the participant the host of the meeting.
        platform:
          nullable: true
          description: |-
            The platform the participant is using to join the meeting.

            * `mobile_app` - Mobile App
            * `desktop` - Desktop
            * `dial_in` - Dial In
            * `unknown` - Unknown
          oneOf:
          - "$ref": "#/components/schemas/MeetingChatMessageSenderPlatformEnum"
          - "$ref": "#/components/schemas/NullEnum"
        extra_data:
          allOf:
          - "$ref": "#/components/schemas/MeetingParticipantExtraData"
          readOnly: true
      required:
      - extra_data
      - id
      - name
    MeetingChatMessageSenderPlatformEnum:
      enum:
      - mobile_app
      - desktop
      - dial_in
      - unknown
      type: string
      description: |-
        * `mobile_app` - Mobile App
        * `desktop` - Desktop
        * `dial_in` - Dial In
        * `unknown` - Unknown
    MeetingMetadata:
      type: object
      properties:
        title:
          type: string
          readOnly: true
          description: The title of the meeting the bot has joined.
        zoom_meeting_uuid:
          type: string
          readOnly: true
          nullable: true
          description: The Zoom-formatted UUID of the Zoom meeting the bot has joined.
            This field is Zoom-only.
        slack_channel_id:
          type: string
          readOnly: true
          nullable: true
          description: The Slack channel ID of the Slack channel the bot has joined.
            This field is Slack-only.
        slack_huddle_id:
          type: string
          readOnly: true
          nullable: true
          description: The Slack huddle ID of the Slack huddle the bot has joined.
            This field is Slack-only.
      required:
      - slack_channel_id
      - slack_huddle_id
      - title
      - zoom_meeting_uuid
    MeetingParticipant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        events:
          type: array
          items:
            "$ref": "#/components/schemas/MeetingParticipantEvent"
          readOnly: true
        is_host:
          type: boolean
          readOnly: true
        platform:
          type: string
          readOnly: true
        extra_data:
          allOf:
          - "$ref": "#/components/schemas/MeetingParticipantExtraData"
          readOnly: true
      required:
      - events
      - extra_data
      - id
      - is_host
      - name
      - platform
    MeetingParticipantEvent:
      type: object
      properties:
        code:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - code
      - created_at
    MeetingParticipantExtraData:
      type: object
      properties:
        zoom:
          "$ref": "#/components/schemas/MeetingParticipantExtraDataZoom"
        microsoft_teams:
          "$ref": "#/components/schemas/MeetingParticipantExtraDataMicrosoftTeams"
        slack:
          "$ref": "#/components/schemas/MeetingParticipantExtraDataSlack"
    MeetingParticipantExtraDataMicrosoftTeams:
      type: object
      properties:
        participant_type:
          type: string
        role:
          type: string
        meeting_role:
          type: string
        user_id:
          type: string
        tenant_id:
          type: string
        client_version:
          type: string
    MeetingParticipantExtraDataSlack:
      type: object
      properties:
        user_id:
          type: string
        email:
          type: string
    MeetingParticipantExtraDataZoom:
      type: object
      properties:
        user_guid:
          type: string
        guest:
          type: boolean
        conf_user_id:
          type: string
    MeetingPlatformEnum:
      enum:
      - zoom
      - google_meet
      - goto_meeting
      - microsoft_teams
      - microsoft_teams_live
      - webex
      - chime_sdk
      - webrtc
      - slack_authenticator
      - slack_huddle_observer
      type: string
      description: |-
        * `zoom` - Zoom
        * `google_meet` - Meet
        * `goto_meeting` - Goto
        * `microsoft_teams` - Teams
        * `microsoft_teams_live` - Teams Live
        * `webex` - Webex
        * `chime_sdk` - Chime Sdk
        * `webrtc` - Webrtc
        * `slack_authenticator` - Slack Authenticator
        * `slack_huddle_observer` - Slack Huddle Observer
    MeetingSyncStatusEnum:
      enum:
      - not_started
      - in_progress
      - completed
      - failed
      type: string
      description: |-
        * `not_started` - Not Started
        * `in_progress` - In Progress
        * `completed` - Completed
        * `failed` - Failed
    MicrosoftTeamsEnum:
      enum:
      - web
      - web_4_core
      type: string
      description: |-
        * `web` - web
        * `web_4_core` - web_4_core
    ModelTypeEnum:
      enum:
      - fast
      - accurate
      type: string
      description: |-
        * `fast` - Fast
        * `accurate` - Accurate
    NullEnum:
      enum:
      - 
    Output:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          "$ref": "#/components/schemas/OutputTypeEnum"
        metadata: {}
        endpoints:
          type: array
          items:
            "$ref": "#/components/schemas/Endpoint"
          readOnly: true
      required:
      - endpoints
      - id
      - type
    OutputMedia:
      type: object
      properties:
        camera:
          "$ref": "#/components/schemas/Camera"
        screenshare:
          "$ref": "#/components/schemas/Screenshare"
    OutputMediaWebpage:
      type: object
      properties:
        url:
          type: string
          description: URL for the webpage
          format: uri
      required:
      - url
    OutputTypeEnum:
      enum:
      - mp4_video_mixed
      - flv_video_mixed
      - raw_audio_mixed
      - mpng_video_unmixed
      - raw_audio_unmixed
      - mp4_video_unmixed
      - active_speaker_diarized_transcription_assemblyai_async_chunked
      - active_speaker_diarized_transcription_assemblyai
      - active_speaker_diarized_transcription_awstranscribe
      - active_speaker_diarized_transcription_deepgram
      - active_speaker_diarized_transcription_gladia
      - active_speaker_diarized_transcription_rev
      - active_speaker_diarized_transcription_speechmatics
      - active_speaker_diarized_transcription_symbl
      - meeting_captions_diarized_transcription
      - active_speaker_timeline
      type: string
      description: |-
        * `mp4_video_mixed` - Mp4 Video Mixed
        * `flv_video_mixed` - Flv Video Mixed
        * `raw_audio_mixed` - Raw Audio Mixed
        * `mpng_video_unmixed` - Mpng Video Unmixed
        * `raw_audio_unmixed` - Raw Audio Unmixed
        * `mp4_video_unmixed` - Mp4 Video Unmixed
        * `active_speaker_diarized_transcription_assemblyai_async_chunked` - Active Speaker Diarized Transcription Assemblyai Async Chunked
        * `active_speaker_diarized_transcription_assemblyai` - Active Speaker Diarized Transcription Assemblyai
        * `active_speaker_diarized_transcription_awstranscribe` - Active Speaker Diarized Transcription Awstranscribe
        * `active_speaker_diarized_transcription_deepgram` - Active Speaker Diarized Transcription Deepgram
        * `active_speaker_diarized_transcription_gladia` - Active Speaker Diarized Transcription Gladia
        * `active_speaker_diarized_transcription_rev` - Active Speaker Diarized Transcription Rev
        * `active_speaker_diarized_transcription_speechmatics` - Active Speaker Diarized Transcription Speechmatic
        * `active_speaker_diarized_transcription_symbl` - Active Speaker Diarized Transcription Symbl
        * `meeting_captions_diarized_transcription` - Meeting Captions Diarized Transcription
        * `active_speaker_timeline` - Active Speaker Timeline
    PaginatedBotList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Bot"
    PaginatedBotScreenshotList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            "$ref": "#/components/schemas/BotScreenshot"
    PaginatedCalendarEventList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            "$ref": "#/components/schemas/CalendarEvent"
    PaginatedCalendarList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Calendar"
    PaginatedGoogleLoginGroupList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            "$ref": "#/components/schemas/GoogleLoginGroup"
    PaginatedGoogleLoginList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            "$ref": "#/components/schemas/GoogleLogin"
    PaginatedJobList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            "$ref": "#/components/schemas/Job"
    PaginatedMeetingChatMessageList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            "$ref": "#/components/schemas/MeetingChatMessage"
    PaginatedZoomMeetingToCredentialList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ZoomMeetingToCredential"
    PaginatedZoomOAuthAppList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ZoomOAuthApp"
    PaginatedZoomOAuthAppLogList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ZoomOAuthAppLog"
    PaginatedZoomOAuthCredentialList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ZoomOAuthCredential"
    PaginatedZoomOAuthCredentialLogList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ZoomOAuthCredentialLog"
    Participant:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: true
        is_host:
          type: boolean
          nullable: true
        platform:
          type: string
          nullable: true
        extra_data:
          allOf:
          - "$ref": "#/components/schemas/ParticipantExtraData"
          nullable: true
      required:
      - extra_data
      - id
      - is_host
      - name
      - platform
    ParticipantExtraData:
      type: object
      properties:
        zoom:
          "$ref": "#/components/schemas/ParticipantExtraDataZoom"
        microsoft_teams:
          "$ref": "#/components/schemas/ParticipantExtraDataMicrosoftTeams"
        slack:
          "$ref": "#/components/schemas/ParticipantExtraDataSlack"
    ParticipantExtraDataMicrosoftTeams:
      type: object
      properties:
        participant_type:
          type: string
        role:
          type: string
        meeting_role:
          type: string
        user_id:
          type: string
        tenant_id:
          type: string
        client_version:
          type: string
    ParticipantExtraDataSlack:
      type: object
      properties:
        user_id:
          type: string
        email:
          type: string
    ParticipantExtraDataZoom:
      type: object
      properties:
        user_guid:
          type: string
        guest:
          type: boolean
        conf_user_id:
          type: string
    ParticipantVideoWhenScreenshareEnum:
      enum:
      - hide
      - beside
      - overlap
      type: string
      description: |-
        * `hide` - hide
        * `beside` - beside
        * `overlap` - overlap
    PatchedBartyCredential:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        oauth_app:
          type: string
          format: uuid
        refresh_token:
          type: string
          writeOnly: true
        current_locks:
          readOnly: true
        status:
          type: string
          readOnly: true
        extra: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedBot:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        meeting_url:
          type: string
          description: The url of the meeting. For example, https://zoom.us/j/123?pwd=456.
            This field will be cleared a few days after the bot has joined a call.
        bot_name:
          type: string
          default: Meeting Notetaker
          description: |-
            The name of the bot that will be displayed in the call.
            *(Note: Authenticated Google Meet bots will use the Google account name and this field will be ignored.)*
          maxLength: 100
        join_at:
          type: string
          format: date-time
          nullable: true
          description: The time at which the bot will join the call, formatted in
            ISO 8601. This field can only be read from scheduled bots that have not
            yet joined a call. Once a bot has joined a call, it's join_at will be
            cleared.
        video_url:
          type: string
          format: uri
          readOnly: true
          description: A URL where the video recorded by the bot can be downloaded.
            This is null while the recording is in progress, and will be populated
            when the recording is completed. The returned URL is valid for 6 hours
            from the API call. A fresh URL can be obtained at any point by calling
            the API again.
        media_retention_end:
          type: string
          format: date-time
          readOnly: true
          description: After this date the video and transcript will be deleted. This
            date is 7 days from when the recording ended.
        status_changes:
          type: array
          items:
            "$ref": "#/components/schemas/BotEvent"
          readOnly: true
        meeting_metadata:
          allOf:
          - "$ref": "#/components/schemas/MeetingMetadata"
          readOnly: true
          nullable: true
        meeting_participants:
          type: array
          items:
            "$ref": "#/components/schemas/MeetingParticipant"
          readOnly: true
        real_time_transcription:
          allOf:
          - "$ref": "#/components/schemas/RealTimeTranscription"
          nullable: true
          description: The settings for real-time transcription.
        real_time_media:
          allOf:
          - "$ref": "#/components/schemas/RealTimeMedia"
          nullable: true
          description: The settings for real-time media output.
        transcription_options:
          allOf:
          - "$ref": "#/components/schemas/TranscriptionOptions"
          nullable: true
        recording_mode:
          allOf:
          - "$ref": "#/components/schemas/RecordingModeEnum"
          default: speaker_view
          description: |-
            The layout of the output video.

            * `speaker_view` - speaker_view
            * `gallery_view` - gallery_view
            * `gallery_view_v2` - gallery_view_v2
            * `audio_only` - audio_only
        recording_mode_options:
          allOf:
          - "$ref": "#/components/schemas/RecordingModeOptions"
          nullable: true
          description: Additional options for recording mode.
        include_bot_in_recording:
          "$ref": "#/components/schemas/BotIncludeInRecording"
        recordings:
          type: array
          items:
            "$ref": "#/components/schemas/BotRecordingEmbed"
          readOnly: true
        output_media:
          allOf:
          - "$ref": "#/components/schemas/OutputMedia"
          nullable: true
          description: Settings for the bot output media.
        automatic_video_output:
          allOf:
          - "$ref": "#/components/schemas/AutomaticVideoOutput"
          nullable: true
          description: Settings for the bot to output video. Image should be 16:9.
            Recommended resolution is 640x360.
        automatic_audio_output:
          allOf:
          - "$ref": "#/components/schemas/AutomaticAudioOutput"
          nullable: true
          description: "(BETA) Settings for the bot to output audio."
        chat:
          allOf:
          - "$ref": "#/components/schemas/Chat"
          nullable: true
          description: "(BETA) Settings for the bot to send chat messages. \n*(Note:
            Chat functionality is only supported for Zoom, Google Meet and Microsoft
            Teams currently.)*"
        automatic_leave:
          allOf:
          - "$ref": "#/components/schemas/AutomaticLeave"
          nullable: true
        variant:
          allOf:
          - "$ref": "#/components/schemas/BotVariant"
          nullable: true
          description: 'Configure bot variants per meeting platforms, e.g. {"zoom":
            "web_4_core"}.'
        calendar_meetings:
          type: array
          items:
            "$ref": "#/components/schemas/BotCalendarMeeting"
          readOnly: true
          description: The calendar meetings associated with this bot. This field
            is **populated only for bots that are dispatched via Calendar V1 API integration**.
        zoom:
          allOf:
          - "$ref": "#/components/schemas/Zoom"
          nullable: true
          description: Zoom specific parameters
        google_meet:
          allOf:
          - "$ref": "#/components/schemas/GoogleMeet"
          nullable: true
          description: Google Meet specific parameters
        slack_authenticator:
          allOf:
          - "$ref": "#/components/schemas/SlackAuthenticator"
          nullable: true
          description: Slack Authenticator specific parameters
        slack_huddle_observer:
          allOf:
          - "$ref": "#/components/schemas/SlackHuddleObserver"
          nullable: true
          description: Slack Huddle Observer specific parameters
        metadata:
          type: object
          additionalProperties:
            type: string
            nullable: true
        recording:
          type: string
          readOnly: true
    PatchedCalendar:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        oauth_client_id:
          type: string
          maxLength: 2000
        oauth_client_secret:
          type: string
          maxLength: 2000
        oauth_refresh_token:
          type: string
          maxLength: 2000
        platform:
          "$ref": "#/components/schemas/CalendarPlatformEnum"
        webhook_url:
          type: string
          format: uri
          maxLength: 2000
          deprecated: true
        oauth_email:
          type: string
          format: email
          maxLength: 2000
        platform_email:
          type: string
          readOnly: true
          nullable: true
        status:
          type: string
          readOnly: true
        status_changes:
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCalendarRecordingPreferences:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        record_non_host:
          type: boolean
        record_recurring:
          type: boolean
        record_external:
          type: boolean
        record_internal:
          type: boolean
        record_confirmed:
          type: boolean
        record_only_host:
          type: boolean
        bot_name:
          type: string
    PatchedGoogleLogin:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          description: The email address of the google account to use for login.
        is_active:
          type: boolean
          description: 'If the login should be used for round robin. (default: true)'
        sso_v2_workspace_domain:
          type: string
          description: The primary domain name of your Google Workspace Account used
            for SSO.
        sso_v2_private_key:
          type: string
          description: PEM-formatted private key used for signing SSO requests.
        sso_v2_cert:
          type: string
          description: PEM-formatted x509 certificate which is registered in your
            Google Workspace SSO Profile.
        group_id:
          type: string
          format: uuid
          description: The id of the login group this login belongs to.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedGoogleLoginGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Name of the login group. It can used to filter out login groups
            when retrieving them via API.
          maxLength: 2000
        login_mode:
          allOf:
          - "$ref": "#/components/schemas/LoginModeEnum"
          description: |-
            Login behaviour of bots that use this login group.

            * `always` - Always
            * `only_if_required` - Only If Required
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        logins:
          type: array
          items:
            "$ref": "#/components/schemas/GoogleLogin"
          readOnly: true
    PatchedSlackTeamIntegration:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email_address:
          type: string
          format: email
          description: The email address of the bot user. This is the email address
            that the customer will invite to their Slack workspace.
        slack_team_domain:
          type: string
          description: The domain of the Slack workspace that the bot user will be
            invited to. For instance "mycompany.slack.com".
          pattern: "^[a-zA-Z0-9-]+\\.slack\\.com$"
        bot_name:
          type: string
          description: The name of the bot user. This is the name that will be displayed
            in Slack.
        profile_photo_base64_jpg:
          type: string
          nullable: true
          description: The profile photo of the bot user, encoded as a base64 string.
            This is the profile photo that will be displayed in Slack. This must be
            a 512x512px JPEG image.
        auto_join_public_huddles:
          type: boolean
          description: Whether the bot user should automatically join huddles occuring
            in public channels.
        ask_to_join_private_huddles:
          type: boolean
          description: Whether the bot user should ask to join huddles occuring in
            private channels.
        ask_to_join_message:
          type: string
          description: The message that the bot user will send when asking to join
            a private huddle.
        filter_huddles_by_user_emails:
          type: array
          items:
            type: string
            format: email
          nullable: true
          description: A list of email addresses. If this is set, the bot user will
            only join huddles where one of the users is a participant of the huddle.
        huddle_bot_api_token:
          type: string
          description: The Recall.ai API token used when creating a bot to join a
            huddle.
        huddle_bot_config:
          allOf:
          - "$ref": "#/components/schemas/Bot"
          description: The configuration of the bot to join a huddle.
        status:
          type: string
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    Platform128Enum:
      enum:
      - zoom
      - google_meet
      - goto_meeting
      - microsoft_teams
      - microsoft_teams_live
      - webex
      - chime_sdk
      - webrtc
      - slack_authenticator
      - slack_huddle_observer
      type: string
      description: |-
        * `zoom` - Zoom
        * `google_meet` - Meet
        * `goto_meeting` - Goto
        * `microsoft_teams` - Teams
        * `microsoft_teams_live` - Teams Live
        * `webex` - Webex
        * `chime_sdk` - Chime Sdk
        * `webrtc` - Webrtc
        * `slack_authenticator` - Slack Authenticator
        * `slack_huddle_observer` - Slack Huddle Observer
    ProviderEnum:
      enum:
      - deepgram
      - assembly_ai_async_chunked
      - assembly_ai
      - rev
      - aws_transcribe
      - speechmatics
      - symbl
      - gladia
      - meeting_captions
      - none
      type: string
      description: |-
        * `deepgram` - Deepgram
        * `assembly_ai_async_chunked` - Assemblyai Async Chunked
        * `assembly_ai` - Assemblyai
        * `rev` - Rev
        * `aws_transcribe` - Aws Transcribe
        * `speechmatics` - Speechmatics
        * `symbl` - Symbl
        * `gladia` - Gladia
        * `meeting_captions` - Meeting Captions
        * `none` - None
    RealTimeMedia:
      type: object
      properties:
        rtmp_destination_url:
          type: string
        websocket_video_destination_url:
          type: string
        websocket_audio_destination_url:
          type: string
        websocket_speaker_timeline_destination_url:
          type: string
        websocket_speaker_timeline_exclude_null_speaker:
          type: boolean
          default: true
          description: Set to false to include null active speaker events in the speaker
            timeline websocket. Defaults to true.
        webhook_call_events_destination_url:
          type: string
          description: Receive webhooks for in call events('bot.participant_join'/'bot.participant_leave'/'bot.active_speaker_notify')
        webhook_chat_messages_destination_url:
          type: string
          description: Receive webhooks for chat messages read by the bot in the meeting(only
            Zoom & Google Meet supported)
    RealTimeTranscription:
      type: object
      properties:
        destination_url:
          type: string
          format: uri
        partial_results:
          type: boolean
          default: false
        enhanced_diarization:
          type: boolean
          default: false
      required:
      - destination_url
    RecordingConfig:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        recording_mode:
          allOf:
          - "$ref": "#/components/schemas/RecordingModeEnum"
          default: speaker_view
          description: |-
            The layout of the output video.

            * `speaker_view` - speaker_view
            * `gallery_view` - gallery_view
            * `gallery_view_v2` - gallery_view_v2
            * `audio_only` - audio_only
        recording_mode_options:
          allOf:
          - "$ref": "#/components/schemas/RecordingModeOptions"
          nullable: true
          description: Additional options for recording mode.
        real_time_transcription:
          allOf:
          - "$ref": "#/components/schemas/RealTimeTranscription"
          nullable: true
          description: The settings for real-time transcription.
        real_time_media:
          allOf:
          - "$ref": "#/components/schemas/RealTimeMedia"
          nullable: true
          description: The settings for real-time media output.
        transcription_options:
          allOf:
          - "$ref": "#/components/schemas/TranscriptionOptions"
          nullable: true
      required:
      - id
    RecordingModeEnum:
      enum:
      - speaker_view
      - gallery_view
      - gallery_view_v2
      - audio_only
      type: string
      description: |-
        * `speaker_view` - speaker_view
        * `gallery_view` - gallery_view
        * `gallery_view_v2` - gallery_view_v2
        * `audio_only` - audio_only
    RecordingModeOptions:
      type: object
      properties:
        participant_video_when_screenshare:
          allOf:
          - "$ref": "#/components/schemas/ParticipantVideoWhenScreenshareEnum"
          default: overlap
          description: |-
            The layout of participant video streams when a screen is being shared. More docs: https://docs.recall.ai/docs/video-layouts

            * `hide` - hide
            * `beside` - beside
            * `overlap` - overlap
        start_recording_on:
          allOf:
          - "$ref": "#/components/schemas/StartRecordingOnEnum"
          default: call_join
          description: |-
            Specify when bot should start recording once in the call.
            *call_join* - Bot will start recording as soon as it joins the call.
            *participant_join* - Bot will start recording when the first participant joins the call.
            *participant_speak* - Bot will start recording when the first participant starts talking.*manual* - Bot will start recording when https://docs.recall.ai/reference/bot_start_recording_create is called.

            * `call_join` - call_join
            * `participant_join` - participant_join
            * `participant_speak` - participant_speak
            * `manual` - manual
    RecordingSpeakerEntry:
      type: object
      properties:
        participant:
          "$ref": "#/components/schemas/Participant"
        start_timestamp:
          "$ref": "#/components/schemas/RecordingSpeakerEntryTimestamp"
        end_timestamp:
          allOf:
          - "$ref": "#/components/schemas/RecordingSpeakerEntryTimestamp"
          nullable: true
      required:
      - end_timestamp
      - participant
      - start_timestamp
    RecordingSpeakerEntryTimestamp:
      type: object
      properties:
        absolute:
          type: string
          format: date-time
          readOnly: true
        relative:
          type: number
          format: double
          readOnly: true
      required:
      - absolute
      - relative
    RevAsyncTranscription:
      type: object
      properties:
        detect_language:
          type: boolean
        language:
          type: string
          description: 'Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=language&t=request'
        skip_diarization:
          type: boolean
          description: "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_diarization&t=request',)"
        skip_postprocessing:
          type: boolean
          description: "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_postprocessing&t=request',)"
        skip_punctuation:
          type: boolean
          description: "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=skip_punctuation&t=request',)"
        remove_disfluencies:
          type: boolean
          description: "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_disfluencies&t=request',)"
        remove_atmospherics:
          type: boolean
          description: "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=remove_atmospherics&t=request',)"
        filter_profanity:
          type: boolean
          description: "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=filter_profanity&t=request',)"
        custom_vocabulary_id:
          type: string
          description: "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=)application/json&path=custom_vocabulary_id&t=request',)"
        custom_vocabularies:
          type: array
          items:
            type: string
          description: "('Docs: https://docs.rev.ai/api/asynchronous/reference/#operation/SubmitTranscriptionJob!ct=application/json&path=custom_vocabularies&t=request',)"
    RevStreaming:
      type: object
      properties:
        language:
          type: string
        metadata:
          type: string
        custom_vocabulary_id:
          type: string
          maxLength: 200
        filter_profanity:
          type: boolean
        remove_disfluencies:
          type: boolean
        delete_after_seconds:
          type: integer
        detailed_partials:
          type: boolean
        start_ts:
          type: number
          format: double
        max_segment_duration_seconds:
          type: integer
        transcriber:
          type: string
        enable_speaker_switch:
          type: boolean
        skip_postprocessing:
          type: boolean
        priority:
          type: string
    Screenshare:
      type: object
      properties:
        kind:
          "$ref": "#/components/schemas/Kind188Enum"
        config:
          "$ref": "#/components/schemas/OutputMediaWebpage"
      required:
      - config
      - kind
    SendChatMessageInput:
      type: object
      properties:
        to:
          type: string
          default: everyone
          description: The person or group that the message will be sent to. On non-Zoom
            platforms, "everyone" is currently the only supported option, meaning
            the message will be sent to everyone in the meeting.
        message:
          type: string
          description: The message that will be sent.
          maxLength: 4096
        pin:
          type: boolean
          default: false
      required:
      - message
    SendToEnum:
      enum:
      - host
      - everyone
      - everyone_except_host
      type: string
      description: |-
        * `host` - host
        * `everyone` - everyone
        * `everyone_except_host` - everyone_except_host
    SlackAuthenticator:
      type: object
      properties:
        slack_team_integration_id:
          type: string
          format: uuid
        team_domain:
          type: string
        login_email:
          type: string
        profile_photo_base64_jpg:
          type: string
          nullable: true
      required:
      - login_email
      - slack_team_integration_id
      - team_domain
    SlackHuddleObserver:
      type: object
      properties:
        user_configs:
          type: array
          items:
            "$ref": "#/components/schemas/SlackHuddleObserverUserConfig"
    SlackHuddleObserverUserConfig:
      type: object
      properties:
        auth_token:
          type: string
        d_session_token:
          type: string
        recall_ai_api_key:
          type: string
        auto_join_public_huddles:
          type: boolean
          default: true
        ask_to_join_private_huddles:
          type: boolean
          default: true
        ask_to_join_message:
          type: string
          nullable: true
          default: ''
        filter_huddles_by_user_emails:
          type: array
          items:
            type: string
          nullable: true
      required:
      - auth_token
      - d_session_token
      - recall_ai_api_key
    SlackTeamIntegration:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email_address:
          type: string
          format: email
          description: The email address of the bot user. This is the email address
            that the customer will invite to their Slack workspace.
        slack_team_domain:
          type: string
          description: The domain of the Slack workspace that the bot user will be
            invited to. For instance "mycompany.slack.com".
          pattern: "^[a-zA-Z0-9-]+\\.slack\\.com$"
        bot_name:
          type: string
          description: The name of the bot user. This is the name that will be displayed
            in Slack.
        profile_photo_base64_jpg:
          type: string
          nullable: true
          description: The profile photo of the bot user, encoded as a base64 string.
            This is the profile photo that will be displayed in Slack. This must be
            a 512x512px JPEG image.
        auto_join_public_huddles:
          type: boolean
          description: Whether the bot user should automatically join huddles occuring
            in public channels.
        ask_to_join_private_huddles:
          type: boolean
          description: Whether the bot user should ask to join huddles occuring in
            private channels.
        ask_to_join_message:
          type: string
          description: The message that the bot user will send when asking to join
            a private huddle.
        filter_huddles_by_user_emails:
          type: array
          items:
            type: string
            format: email
          nullable: true
          description: A list of email addresses. If this is set, the bot user will
            only join huddles where one of the users is a participant of the huddle.
        huddle_bot_api_token:
          type: string
          description: The Recall.ai API token used when creating a bot to join a
            huddle.
        huddle_bot_config:
          allOf:
          - "$ref": "#/components/schemas/Bot"
          description: The configuration of the bot to join a huddle.
        status:
          type: string
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - ask_to_join_message
      - ask_to_join_private_huddles
      - auto_join_public_huddles
      - bot_name
      - created_at
      - email_address
      - huddle_bot_api_token
      - huddle_bot_config
      - id
      - slack_team_domain
      - status
      - updated_at
    SpeakerTimelineEvent:
      type: object
      properties:
        name:
          type: string
          description: The name of the speaker.
        user_id:
          type: integer
          description: The ID of the speaker, which can be used to match speaker names
            to real-time audio and video streams.
        timestamp:
          type: number
          format: double
          description: The time relative to the start of the recording when this participant
            started speaking, in seconds.
      required:
      - name
      - timestamp
      - user_id
    SpeechmaticsAdditionalWord:
      type: object
      properties:
        content:
          type: string
        sounds_like:
          type: array
          items:
            type: string
      required:
      - content
    SpeechmaticsAsyncTranscription:
      type: object
      properties:
        language:
          type: string
          description: Language model to process the audio input, normally specified
            as an ISO language code
        domain:
          type: string
          description: Request a specialized model based on 'language' but optimized
            for a particular field, e.g. "finance" or "medical".
        output_locale:
          type: string
          description: Language locale to be used when generating the transcription
            output, normally specified as an ISO language code
        operating_point:
          type: string
          description: 'Enum: "standardenhanced"'
        additional_vocab:
          type: array
          items:
            "$ref": "#/components/schemas/AdditionalVocab"
          description: List of custom words or phrases that should be recognized.
            Alternative pronunciations can be specified to aid recognition.
        language_identification_config:
          "$ref": "#/components/schemas/LanguageIdentificationConfig"
      required:
      - language
    SpeechmaticsDiarizationConfig:
      type: object
      properties:
        max_speakers:
          type: integer
      required:
      - max_speakers
    SpeechmaticsPunctuationOverrides:
      type: object
      properties:
        permitted_marks:
          type: array
          items:
            type: string
        sensitivity:
          type: number
          format: double
      required:
      - permitted_marks
    SpeechmaticsStreaming:
      type: object
      properties:
        language:
          type: string
        additional_vocab:
          type: array
          items:
            "$ref": "#/components/schemas/SpeechmaticsAdditionalWord"
        diarization:
          type: string
        speaker_diarization_config:
          "$ref": "#/components/schemas/SpeechmaticsDiarizationConfig"
        enable_partials:
          type: boolean
        max_delay:
          type: number
          format: double
        max_delay_mode:
          type: string
        output_locale:
          type: string
        punctuation_overrides:
          "$ref": "#/components/schemas/SpeechmaticsPunctuationOverrides"
        operating_point:
          type: string
        enable_entities:
          type: boolean
      required:
      - language
    StartRecordingOnEnum:
      enum:
      - call_join
      - participant_join
      - participant_speak
      - manual
      type: string
      description: |-
        * `call_join` - call_join
        * `participant_join` - participant_join
        * `participant_speak` - participant_speak
        * `manual` - manual
    TeamsInvite:
      type: object
      properties:
        organizer_id:
          type: string
        tenant_id:
          type: string
        message_id:
          type: string
        thread_id:
          type: string
      required:
      - message_id
      - organizer_id
      - tenant_id
      - thread_id
    ToEnum:
      enum:
      - everyone
      - only_bot
      type: string
      description: |-
        * `everyone` - Everyone
        * `only_bot` - Only Bot
    TranscriptLegacyParagraph:
      type: object
      properties:
        speaker:
          type: string
          description: The name of the meeting participant who said these words.
        speaker_id:
          type: integer
          description: The ID of the speaker.
        language:
          type: string
        words:
          type: array
          items:
            "$ref": "#/components/schemas/TranscriptLegacyWord"
      required:
      - language
      - speaker
      - speaker_id
      - words
    TranscriptLegacyWord:
      type: object
      properties:
        text:
          type: string
        start_timestamp:
          type: number
          format: double
        end_timestamp:
          type: number
          format: double
        language:
          type: string
        confidence:
          type: number
          format: double
      required:
      - end_timestamp
      - start_timestamp
      - text
    TranscriptionOptions:
      type: object
      properties:
        provider:
          allOf:
          - "$ref": "#/components/schemas/ProviderEnum"
          description: |-
            The transcription provider to use.
            * `deepgram` - Deepgram
            * `assembly_ai_async_chunked` - Assemblyai Async Chunked
            * `assembly_ai` - Assemblyai
            * `rev` - Rev
            * `aws_transcribe` - Aws Transcribe
            * `speechmatics` - Speechmatics
            * `symbl` - Symbl
            * `gladia` - Gladia
            * `meeting_captions` - Meeting Captions
            * `none` - None
        assembly_ai_async_chunked:
          allOf:
          - "$ref": "#/components/schemas/AssemblyAiAsyncChunkedStreaming"
          title: AssemblyAi async chunked transcription Settings
          description: 'Docs: https://www.assemblyai.com/docs/api-reference/transcript'
        assembly_ai:
          allOf:
          - "$ref": "#/components/schemas/AssemblyAiStreaming"
          title: AssemblyAi Real-time Transcription Settings
          description: 'Docs: https://www.assemblyai.com/docs/walkthroughs#realtime-streaming-transcription'
        deepgram:
          allOf:
          - "$ref": "#/components/schemas/DeepgramStreaming"
          title: Deepgram Real-time Transcription Settings
          description: 'Docs: https://developers.deepgram.com/reference/streaming'
        gladia:
          allOf:
          - "$ref": "#/components/schemas/GladiaStreaming"
          title: Gladia Real-time Transcription Settings
          description: 'Docs: https://docs.gladia.io/reference/live-audio'
        rev:
          allOf:
          - "$ref": "#/components/schemas/RevStreaming"
          title: Rev Real-time Transcription Settings
          description: 'Docs: https://docs.rev.ai/api/streaming/requests/'
        aws_transcribe:
          allOf:
          - "$ref": "#/components/schemas/AwsTranscribeStreaming"
          title: AWS Transcribe Streaming Transcription Settings
          description: |-
            You must specify either:
            - `language_code`(e.g `en-US`) OR
            - Set `language_identification` to `true` AND specify `language_options`(e.g `en-US,fr-FR,es-US,de-DE,it-IT`).
            Docs: https://docs.aws.amazon.com/transcribe/latest/APIReference/API_streaming_StartStreamTranscription.html
        speechmatics:
          allOf:
          - "$ref": "#/components/schemas/SpeechmaticsStreaming"
          title: Speechmatics Real-time Transcription Settings
          description: |-
            You must specify `language` (e.g `en`)
            Docs: https://docs.speechmatics.com/rt-api-ref#transcription-config
      required:
      - provider
    UsageResponse:
      type: object
      properties:
        bot_total:
          type: number
          format: double
          description: The total amount of time, in seconds, of bots used.
      required:
      - bot_total
    VideoOutput:
      type: object
      properties:
        kind:
          allOf:
          - "$ref": "#/components/schemas/VideoOutputKindEnum"
          description: |-
            The kind of data encoded in b64_data

            * `jpeg` - jpeg
        b64_data:
          type: string
          writeOnly: true
          description: 'Data encoded in Base64 format, using the standard alphabet
            (specified here: https://datatracker.ietf.org/doc/html/rfc4648#section-4)'
          maxLength: 1835008
      required:
      - b64_data
      - kind
    VideoOutputKindEnum:
      enum:
      - jpeg
      type: string
      description: "* `jpeg` - jpeg"
    VideoSeparatePart:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        participant:
          allOf:
          - "$ref": "#/components/schemas/Participant"
          readOnly: true
        start_timestamp:
          allOf:
          - "$ref": "#/components/schemas/MediaSeparatePartTimestamp"
          readOnly: true
        duration:
          type: number
          format: double
          readOnly: true
        download_url:
          type: string
          format: uri
          readOnly: true
        type:
          allOf:
          - "$ref": "#/components/schemas/VideoSeparatePartTypeEnum"
          readOnly: true
          description: |-
            Type of video part (e.g. screen share, camera).

            * `webcam` - Webcam
            * `screenshare` - Screenshare
      required:
      - created_at
      - download_url
      - duration
      - id
      - participant
      - start_timestamp
      - type
    VideoSeparatePartTypeEnum:
      enum:
      - webcam
      - screenshare
      type: string
      description: |-
        * `webcam` - Webcam
        * `screenshare` - Screenshare
    WebexInvite:
      type: object
      properties:
        meeting_subdomain:
          type: string
        meeting_path:
          type: string
          description: This value is available only for Scheduled Webex meetings.
        meeting_mtid:
          type: string
          description: This value is available only for Scheduled Webex meetings.
        meeting_personal_room_id:
          type: string
          description: This value is available only for Personal room Webex meetings.
      required:
      - meeting_subdomain
    Zoom:
      type: object
      properties:
        join_token_url:
          type: string
          format: uri
          description: 'A URL which Recall will make a GET request to, in order to
            retrieve the Zoom Join Token for Local Recording, which the Zoom bot uses
            to automatically record. This token can be generated through the Zoom
            API. Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/meetingLocalRecordingJoinToken'
        zak_url:
          type: string
          format: uri
          description: 'A URL which Recall will make  GET request to, in order to
            retrieve the ZAK. The V1 Zoom bot uses this to join meetings that require
            authentication to join.This token can be generated through the Zoom API.
            Docs: https://marketplace.zoom.us/docs/api-reference/zoom-api/methods/#operation/userZak'
        user_email:
          type: string
          format: email
          description: This is only required for registration-required webinars. This
            should be the email address registered for the webinar.
    ZoomAccessToken:
      type: object
      properties:
        token:
          type: string
        expires_at:
          type: string
          format: date-time
      required:
      - expires_at
      - token
    ZoomAuthorizationCode:
      type: object
      properties:
        code:
          type: string
        redirect_uri:
          type: string
          format: uri
        code_verifier:
          type: string
      required:
      - code
      - redirect_uri
    ZoomEnum:
      enum:
      - web
      - web_4_core
      - native
      type: string
      description: |-
        * `web` - web
        * `web_4_core` - web_4_core
        * `native` - native
    ZoomInvite:
      type: object
      properties:
        meeting_id:
          type: string
        meeting_password:
          type: string
      required:
      - meeting_id
    ZoomMeetingToCredential:
      type: object
      properties:
        meeting_id:
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          format: int64
        credential:
          type: string
          format: uuid
        synced_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - credential
      - meeting_id
      - synced_at
    ZoomOAuthApp:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        kind:
          "$ref": "#/components/schemas/ZoomOAuthAppKindEnum"
        client_id:
          type: string
          maxLength: 200
        client_secret:
          type: string
          maxLength: 200
        webhook_secret:
          type: string
          maxLength: 200
        webhook_last_validation:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - client_id
      - client_secret
      - created_at
      - id
      - kind
      - webhook_last_validation
      - webhook_secret
    ZoomOAuthAppKindEnum:
      enum:
      - user_level
      - account_level
      type: string
      description: |-
        * `user_level` - User Level
        * `account_level` - Account Level
    ZoomOAuthAppLog:
      type: object
      properties:
        oauth_app:
          type: string
          format: uuid
        message:
          type: string
          maxLength: 2000
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - message
      - oauth_app
    ZoomOAuthCredential:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        oauth_app:
          type: string
          format: uuid
        status:
          allOf:
          - "$ref": "#/components/schemas/ZoomOAuthCredentialStatusEnum"
          readOnly: true
        user_id:
          type: string
          readOnly: true
          nullable: true
        account_id:
          type: string
          readOnly: true
          nullable: true
        authorization_code:
          allOf:
          - "$ref": "#/components/schemas/ZoomAuthorizationCode"
          writeOnly: true
        access_token_callback_url:
          type: string
          nullable: true
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        meeting_sync_status:
          allOf:
          - "$ref": "#/components/schemas/MeetingSyncStatusEnum"
          readOnly: true
          description: |-
            This field tracks the status of initial meeting sync on the credential. This operation is processed asynchronously when the credential is created or when the sync meetings endpoint is called.

            * `not_started` - Not Started
            * `in_progress` - In Progress
            * `completed` - Completed
            * `failed` - Failed
      required:
      - account_id
      - created_at
      - id
      - meeting_sync_status
      - oauth_app
      - status
      - user_id
    ZoomOAuthCredentialBadRequest:
      type: object
      properties:
        detail:
          type: string
        conflicting_zoom_account_id:
          type: string
          description: The Zoom account ID of the conflicting credential, if any.
        conflicting_zoom_user_id:
          type: string
          description: The Zoom user ID of the conflicting credential, if any.
      required:
      - detail
    ZoomOAuthCredentialLog:
      type: object
      properties:
        credential:
          type: string
          format: uuid
        message:
          type: string
          maxLength: 2000
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - credential
      - message
    ZoomOAuthCredentialStatusEnum:
      enum:
      - healthy
      - unhealthy
      type: string
      description: |-
        * `healthy` - Healthy
        * `unhealthy` - Unhealthy
  securitySchemes:
    CalendarJwtAuthentication:
      type: apiKey
      in: header
      name: x-recallcalendarauthtoken
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
- url: https://us-east-1.recall.ai
  description: Recall.ai API
- url: https://eu-central-1.recall.ai
  description: European Recall.ai API
- url: https://ap-northeast-1.recall.ai
  description: Asia Recall.ai API
- url: https://us-west-2.recall.ai
  description: Pay-as-you-go Recall.ai API
x-readme:
  explorer-enabled: true
  proxy-enabled: true
